[{"D:\\SE 15 Frontend\\vc-frontend\\src\\index.js":"1","D:\\SE 15 Frontend\\vc-frontend\\src\\reportWebVitals.js":"2","D:\\SE 15 Frontend\\vc-frontend\\src\\App.js":"3","D:\\SE 15 Frontend\\vc-frontend\\src\\constants.js":"4","D:\\SE 15 Frontend\\vc-frontend\\src\\screens\\LoginScreen.js":"5","D:\\SE 15 Frontend\\vc-frontend\\src\\screens\\SignInScreen.js":"6"},{"size":761,"mtime":1611216731478,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1610649203388,"results":"9","hashOfConfig":"8"},{"size":348,"mtime":1611213126776,"results":"10","hashOfConfig":"8"},{"size":919,"mtime":1611213100902,"results":"11","hashOfConfig":"8"},{"size":1739,"mtime":1611213677067,"results":"12","hashOfConfig":"8"},{"size":2715,"mtime":1611253871525,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"l803l6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\SE 15 Frontend\\vc-frontend\\src\\index.js",[],["28","29"],"D:\\SE 15 Frontend\\vc-frontend\\src\\reportWebVitals.js",[],"D:\\SE 15 Frontend\\vc-frontend\\src\\App.js",[],"D:\\SE 15 Frontend\\vc-frontend\\src\\constants.js",[],"D:\\SE 15 Frontend\\vc-frontend\\src\\screens\\LoginScreen.js",["30","31","32","33"],"import{Input, Stack,Button,IconButton,InputGroup, InputLeftElement, Box} from '@chakra-ui/react';\r\nimport { Divider, FormControl,Flex,Heading,Icon ,Text} from '@chakra-ui/react';\r\n\r\nconst LoginScreen=()=>{\r\n    return(\r\n        <Flex width=\"Full\" align=\"center\" justifyContent=\"center\">\r\n        <Box p={8} maxWidth=\"500px\" borderWidth={3} borderRadius={8} boxShadow=\"lg\" bg=\"white.200\" borderColor=\"blueGreen.100\">\r\n        <Box textAlign=\"center\" color=\"blueGreen.100\" textStyle=\"h1\">\r\n            <Heading> Login </Heading>\r\n        </Box>\r\n        <Box my={4} textAlign=\"left\">\r\n        <form action='submit'>\r\n            <Stack spacing={3}>\r\n                <FormControl isRequired>\r\n                    <InputGroup>\r\n                        \r\n                        <Input type='email' placeholder='Enter email' bg=\"white.100\" color=\"black.600\" borderColor=\"blueGreen.100\"/>\r\n                    </InputGroup>\r\n                </FormControl>\r\n                <FormControl isRequired>\r\n                    <InputGroup>\r\n                        \r\n                        <Input type='password' aria-label='password' placeholder='Enter Password' bg=\"white.100\" color=\"black.600\" borderColor=\"blueGreen.100\"/>\r\n                    </InputGroup>\r\n                </FormControl>\r\n             \r\n                <Divider/>\r\n                \r\n                <Button type='submit' variant='solid' boxShadow='sm'_hover={{boxShadow:'md'}} bg=\"black.500\" >\r\n                    Log In!</Button> \r\n\r\n            </Stack>\r\n        <Text textStyle=\"h2\">\r\n            <br/>\r\n            <a href=\"#\">Sign Up?</a>\r\n        </Text>\r\n        </form>\r\n        \r\n        </Box>\r\n        </Box>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;","D:\\SE 15 Frontend\\vc-frontend\\src\\screens\\SignInScreen.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":28,"nodeType":"40","messageId":"41","endLine":1,"endColumn":38},{"ruleId":"38","severity":1,"message":"42","line":1,"column":51,"nodeType":"40","messageId":"41","endLine":1,"endColumn":67},{"ruleId":"38","severity":1,"message":"43","line":2,"column":44,"nodeType":"40","messageId":"41","endLine":2,"endColumn":48},{"ruleId":"44","severity":1,"message":"45","line":35,"column":13,"nodeType":"46","endLine":35,"endColumn":25},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'InputLeftElement' is defined but never used.","'Icon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]