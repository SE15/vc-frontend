[{"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\index.js":"1","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\App.js":"2","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\reducers\\auth.js":"3","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\actionTypes.js":"4","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\auth.js":"5","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Footer.jsx":"6","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Header.jsx":"7","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Main.jsx":"8","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\ajax.js":"9","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\constants.js":"10","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\ProfileSettings.jsx":"11","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Logout.jsx":"12","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\SignUp.jsx":"13","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Profile.jsx":"14","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Login.jsx":"15","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\ChangePassword.jsx":"16","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\DeleteAccount.jsx":"17","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Home.jsx":"18","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Input\\Input.js":"19","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Button\\Button.js":"20","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Spinner\\Spinner.js":"21","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ProfileInfo.jsx":"22","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ErrorMessage.jsx":"23","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\TempBox.jsx":"24","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ReccomendationPost.js":"25","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Reccomendation.js":"26","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Connection.js":"27","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\constants.js":"28","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\screens\\Login.jsx":"29","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Skills\\Skill\\Skill.js":"30"},{"size":829,"mtime":1613722046491,"results":"31","hashOfConfig":"32"},{"size":845,"mtime":1613967132579,"results":"33","hashOfConfig":"32"},{"size":1566,"mtime":1613722046631,"results":"34","hashOfConfig":"32"},{"size":233,"mtime":1613722046630,"results":"35","hashOfConfig":"32"},{"size":1822,"mtime":1613966053897,"results":"36","hashOfConfig":"32"},{"size":754,"mtime":1613722046292,"results":"37","hashOfConfig":"32"},{"size":2375,"mtime":1613722046324,"results":"38","hashOfConfig":"32"},{"size":1345,"mtime":1613815292186,"results":"39","hashOfConfig":"32"},{"size":138,"mtime":1613722046631,"results":"40","hashOfConfig":"32"},{"size":343,"mtime":1613722046632,"results":"41","hashOfConfig":"32"},{"size":6394,"mtime":1613722046559,"results":"42","hashOfConfig":"32"},{"size":536,"mtime":1613722046544,"results":"43","hashOfConfig":"32"},{"size":6370,"mtime":1613967739679,"results":"44","hashOfConfig":"32"},{"size":2859,"mtime":1614001600705,"results":"45","hashOfConfig":"32"},{"size":6221,"mtime":1613794983782,"results":"46","hashOfConfig":"32"},{"size":5941,"mtime":1613722046579,"results":"47","hashOfConfig":"32"},{"size":3729,"mtime":1613722046611,"results":"48","hashOfConfig":"32"},{"size":1468,"mtime":1613966525544,"results":"49","hashOfConfig":"32"},{"size":1845,"mtime":1613722046387,"results":"50","hashOfConfig":"32"},{"size":305,"mtime":1613722046346,"results":"51","hashOfConfig":"32"},{"size":178,"mtime":1613722046390,"results":"52","hashOfConfig":"32"},{"size":1899,"mtime":1614001538600,"results":"53","hashOfConfig":"32"},{"size":351,"mtime":1613722046281,"results":"54","hashOfConfig":"32"},{"size":7306,"mtime":1614000766441,"results":"55","hashOfConfig":"32"},{"size":3713,"mtime":1613722046456,"results":"56","hashOfConfig":"32"},{"size":1610,"mtime":1613722046418,"results":"57","hashOfConfig":"32"},{"size":1340,"mtime":1613722046279,"results":"58","hashOfConfig":"32"},{"size":463,"mtime":1613722046490,"results":"59","hashOfConfig":"32"},{"size":4932,"mtime":1613967846066,"results":"60","hashOfConfig":"32"},{"size":9876,"mtime":1614004503357,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1p7gug7",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\index.js",[],["133","134"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\App.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\reducers\\auth.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\actionTypes.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\auth.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Footer.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Header.jsx",["135","136","137","138","139"],"import { Input, Heading, InputGroup, InputLeftElement, Box,\r\n    HStack, IconButton, Spacer,Button, Image, Container} from \"@chakra-ui/react\"\r\nimport { Search2Icon,BellIcon,SettingsIcon } from '@chakra-ui/icons'\r\nimport {React,useState} from 'react'\r\nimport { kPrimaryBlack, kSecondaryBlue } from '../utils/constants'\r\nimport logo from '../assets/logo.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n\r\n   return ([\r\n           <Box bg={kPrimaryBlack} w=\"100%\" p={5}  position=\"fixed\" color=\"white\" h = {16} p= {2}>\r\n               <HStack>\r\n                    <Image \r\n                        src = {logo}\r\n                        htmlWidth = \"60px\"\r\n                        />\r\n                    <Heading  size=\"md\" color=\"black.500\">\r\n                        Volunteer Circle\r\n                    </Heading>\r\n                    <Spacer />\r\n                   <InputGroup w=\"50%\">\r\n                       <InputLeftElement\r\n                       pointerEvents=\"none\"\r\n                       children={<Search2Icon color=\"white.100\" />}\r\n                       \r\n                       />\r\n                       <Input type=\"search\" placeholder=\"Search\" color=\"black.400\"/>\r\n                       <IconButton aria-label=\"Search database\" icon={<Search2Icon />} bg=\"blueGreen.400\"/>\r\n                   </InputGroup>\r\n                   <Spacer/>\r\n                   <HStack>\r\n                   <SignButton type={props.type}/>                  \r\n                   </HStack>\r\n                   \r\n               </HStack>\r\n           </Box>,\r\n           <Box h = {16} bg = {kSecondaryBlue}/>\r\n   ]\r\n   )\r\n}\r\n\r\nfunction SignButton(props){\r\n   if(props.type==false){\r\n       //Guest\r\n       return(\r\n           <HStack>\r\n           <Button size=\"md\" bg=\"blueGreen.100\" >Sign In</Button> \r\n       </HStack>); \r\n   }\r\n   if(props.type==true){\r\n       return(\r\n           <HStack>\r\n               <IconButton icon={<BellIcon />} bg=\"blueGreen.200\"/>\r\n                <IconButton icon={<SettingsIcon />} bg=\"blueGreen.200\" />\r\n                <NavLink\r\n                    to=\"/logout\"\r\n                    activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\"\r\n                    }}\r\n                    >Sign Out</NavLink>\r\n           </HStack>\r\n           );\r\n   }\r\n   \r\n}\r\n\r\n\r\nexport default Header;","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Main.jsx",["140"],"import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport ProfileSettings from './ProfileSettings';\r\nimport Profile from './Profile';\r\nimport Home from './Home';\r\nimport Login from '../screens/Login';\r\nimport SignUp from './SignUp';\r\nimport Logout from './Logout';\r\nimport Delete from '../popups/DeleteAccount'\r\nimport Change from '../popups/ChangePassword'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <Login />\r\n            </Route>\r\n            <Route path=\"/delete\" exact>\r\n                <Delete />\r\n            </Route>\r\n            <Route path=\"/change\" exact>\r\n                <Change />\r\n            </Route>\r\n            <Route path=\"/home\" exact>\r\n                <Home />\r\n            </Route>\r\n            <Route path=\"/settings\" exact>\r\n                <ProfileSettings />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n                <Profile button=\"3\" />\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n                <Login />\r\n            </Route>\r\n            <Route path=\"/signup\" exact>\r\n                <SignUp />\r\n            </Route>\r\n            <Route path=\"/logout\" exact>\r\n                <Logout />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\ajax.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\constants.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\ProfileSettings.jsx",["141","142","143","144","145","146"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  Image,\r\n  Stack\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport anonymous from '../assets/anonymous.png';\r\nimport { kPrimaryGray } from '../utils/constants';\r\n\r\nexport default function Profile() {\r\n  const [fname, setFName] = useState('');\r\n  const [lname, setLName] = useState('');\r\n \r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n  const [isDeleteAccount, setIsDeleteAccount] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //save fname and lname\r\n      setIsLoggedIn(true);\r\n      setIsLoading(false);\r\n      \r\n    } catch (error) {\r\n      setError('Invalid');\r\n      setIsLoading(false);\r\n      \r\n    }\r\n  };\r\n\r\n  //image uploading\r\n  const uploadedImage = React.useRef(null);\r\n  const imageUploader = React.useRef(null);\r\n\r\n  const handleImageUpload = e => {\r\n    const [file] = e.target.files;\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      const { current } = uploadedImage;\r\n      current.file = file;\r\n      reader.onload = e => {\r\n        current.src = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" >\r\n      <Box\r\n        p={8}\r\n        w = \"30%\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n        bg = {kPrimaryGray}\r\n      >\r\n        {isLoggedIn ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Changed Profile!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsLoggedIn(false)}\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box >\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\" >\r\n              <Heading>Profile</Heading>\r\n            </Box>\r\n            <Box height=\"20px\"></Box>\r\n            <Box >\r\n              <center>\r\n              <Image                  \r\n                  borderRadius=\"full\"\r\n                  width=\"50%\"\r\n                  height=\"50%\"\r\n                  objectFit=\"cover\"\r\n                  src = {anonymous}\r\n                  alt=\"Profile Picture\"\r\n                  ref={uploadedImage}\r\n                />\r\n                </center>\r\n            </Box>\r\n            <Stack align=\"center\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                ref={imageUploader}\r\n                style={{\r\n                  display: \"none\"\r\n                }}\r\n              />\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                variant=\"solid\"\r\n                type=\"submit\"\r\n                alignItems=\"center\"\r\n                mt={4}\r\n                onClick={() => imageUploader.current.click()}\r\n              >\r\n                {isLoading ? (\r\n                  <CircularProgress\r\n                    isIndeterminate\r\n                    size=\"sm\"\r\n                    color=\"teal\"\r\n                                      \r\n                  />\r\n                ) : (\r\n                  'Change Picture'\r\n                )}\r\n              </Button>\r\n            </Stack>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl>\r\n                    <Box borderColor = \"blue.500\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    size=\"lg\"\r\n                    onChange={event => setFName(event.currentTarget.value)}\r\n                  />\r\n                  </Box>\r\n                </FormControl>\r\n                <Box height=\"20px\"></Box>\r\n                <FormControl>\r\n                <Box borderColor = \"blue.500\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    colorScheme = \"black\"\r\n                    size=\"lg\"\r\n                    onChange={event => setLName(event.currentTarget.value)}\r\n                  />\r\n                  </Box>\r\n                </FormControl>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Save'\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Change Password'\r\n                  )}\r\n                </Button>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  colorScheme=\"red\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Delete Account'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Logout.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\SignUp.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Profile.jsx",["147","148"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Login.jsx",[],["149","150"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\ChangePassword.jsx",["151","152","153"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Icon\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nexport default function ChangePassword() {\r\n  const [currentpassword, setCurrentPassword] = useState('');\r\n  const [newpassword, setNewPassword] = useState('');\r\n  const [confnewpassword, setConfNewPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //if(newpassword===confnewpassword) && await(){\r\n      \r\n      //await() -confirm the current password from back end\r\n\r\n      setIsVerified(true);\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n      \r\n      \r\n\r\n      \r\n    } catch (error) {\r\n      setError('Invalid password');\r\n      setIsLoading(false);\r\n      setCurrentPassword('');\r\n      setNewPassword('');\r\n      setConfNewPassword('');\r\n      setShowPassword(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        {isVerified ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Password Changed!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsVerified(false)} //go back to the home profile\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\">\r\n              <Heading>Change Password</Heading>\r\n            </Box>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Current Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setCurrentPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>New Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setNewPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Confirm New Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setConfNewPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <Button\r\n                  variantColor=\"teal\"\r\n                  variant=\"outline\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Confirm'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\DeleteAccount.jsx",["154"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Icon\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nexport default function DeleteAccount() {\r\n  const [currentpassword, setCurrentPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //await() -confirm the current password from back end\r\n      \r\n      setIsVerified(true);\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n      \r\n      \r\n\r\n      \r\n    } catch (error) {\r\n      setError('Invalid password');\r\n      setIsLoading(false);\r\n      setCurrentPassword('');\r\n      setShowPassword(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        {isVerified ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Password Changed!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsVerified(false)} //go back to the home profile\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\">\r\n              <Heading>Delete Account</Heading>\r\n            </Box>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Current Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setCurrentPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                \r\n                \r\n                <Button\r\n                  colorScheme = \"red\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Delete'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Home.jsx",["155","156","157","158"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Input\\Input.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Button\\Button.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Spinner\\Spinner.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ProfileInfo.jsx",["159","160","161","162"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ErrorMessage.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\TempBox.jsx",["163","164","165","166","167","168","169","170","171","172"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ReccomendationPost.js",["173","174","175","176","177","178"],"import { React, useState } from \"react\"\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport {\r\n    Button, Modal, ModalOverlay, ModalContent, Image\r\n    , ModalCloseButton, Text, useDisclosure, ModalFooter,\r\n     Textarea, Avatar, Stack, Heading, Box\r\n} from '@chakra-ui/react';\r\nimport { kPrimaryBlackLight,kSecondaryBlueLight } from '../constants'\r\nconst ReccomendationPost = props => {\r\n    return (\r\n        <>\r\n            <ReccomendationButton visit={props.visit} name={props.name} />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction ReccomendationButton(props) {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n    const[isreccomended,setIsReccomended]=useState(false);\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleReccomendation= async event=>{\r\n        setIsLoading(true);\r\n        try{\r\n            //wait for update validation in db\r\n            setIsReccomended(true);\r\n            setIsLoading(false);\r\n\r\n        }catch{\r\n            setIsReccomended(false);\r\n            setIsLoading(false);\r\n            setError(\"Couldn't Post Reccomendation\")\r\n        }\r\n    }\r\n    if (props.visit == true && isLoggedIn == true && isreccomended==false) {\r\n\r\n        return (\r\n            <>\r\n                <Box>\r\n                    <Button onClick={onOpen} bg={kSecondaryBlueLight} isDisabled={false}>Post Reccomendation</Button>\r\n                </Box>\r\n                <Modal isOpen={isOpen} onClose={onClose} color=\"black.700\" closeOnOverlayClick=\"false\">\r\n                    <ModalOverlay />\r\n                    <ModalContent>\r\n                        <Box bg={kPrimaryBlackLight} w=\"100%\" p={4} color=\"white\">\r\n                            <stack>\r\n                                <Heading color=\"black.400\" fontSize=\"lg\">\r\n                                    Post Reccomendation\r\n                </Heading>\r\n                                <br />\r\n                                <Stack direction=\"row\">\r\n                                {props.cimage!=null?(\r\n                                    <Image src={props.image}  borderRadius=\"full\" boxSize=\"3rem\" />\r\n                                \r\n                                ) :(\r\n                                    <Avatar name={props.name} src=\"https://bit.ly/broken-link\" />\r\n                                )\r\n                                }\r\n\r\n\r\n                                    <Text color={kSecondaryBlueLight}>\r\n                                        {props.name}\r\n                                    </Text>\r\n                   \r\n                                        <Textarea placeholder=\"Enter reccomendation\" color=\"black.400\" />\r\n                                    \r\n                                    <ModalCloseButton />\r\n                                </Stack>\r\n                            </stack>\r\n                            <ModalFooter>\r\n                                <Button colorScheme=\"blue\" mr={3} onClick={()=>handleReccomendation()}>\r\n                                    Post\r\n            </Button>\r\n                            </ModalFooter>\r\n                        </Box>\r\n                    </ModalContent>\r\n\r\n                </Modal>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <Button onClick={onOpen} bg={kSecondaryBlueLight}isDisabled={true}>Post Reccomendation</Button>\r\n            );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nReccomendationPost.propTypes = {\r\n    name: PropTypes.string,\r\n    image: PropTypes.string,\r\n    visit: PropTypes.bool\r\n}\r\nReccomendationPost.defaultProps = {\r\n    image: \"null\",\r\n    visit: true\r\n}\r\nexport default ReccomendationPost  \r\n","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Reccomendation.js",["179","180","181","182","183","184","185","186","187","188"],"import { React, useState } from \"react\"\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport {\r\n    Button, Modal, ModalOverlay, ModalContent, Image\r\n    , ModalCloseButton, Text, useDisclosure, ModalFooter,\r\n     Textarea, Avatar, Stack, Heading, Box, Divider\r\n} from '@chakra-ui/react';\r\n\r\nconst Reccomendation = props => {\r\n    return (\r\n        <>\r\n             <Box bg=\"white.200\" w=\"50%\" p={4} color=\"white\">\r\n                            <stack>\r\n                                \r\n                                \r\n                                <Stack direction=\"row\">\r\n                                    if({props.postedImage}!=null){\r\n                                        <Image src={props.postedImage} size=\"100%\" rounded=\"1rem\" shadow=\"2xl\" />\r\n                                    }\r\n                                    else{\r\n                                        <Avatar name={props.postedBy} src=\"https://bit.ly/broken-link\" />\r\n                                    }\r\n\r\n\r\n                                    <Heading color=\"black.400\" fontSize=\"lg\">\r\n                                                        {props.postedBy}\r\n                                    </Heading>\r\n                   \r\n                                </Stack>\r\n                                <Divider/>\r\n                                <Text color=\"black.900\" fontSize=\"md\" textAlign=\"left\">\r\n                                    {props.reccomendation}\r\n                                </Text>\r\n                            </stack>\r\n                            </Box>\r\n        </>\r\n    )\r\n}\r\nexport default Reccomendation","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Connection.js",["189","190"],"import {React,useState} from \"react\"\r\n//import { Link } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport {  Heading, Flex, Avatar, Box, HStack,Image,Link } from \"@chakra-ui/react\"\r\nimport { kPrimaryBlackDark, kPrimaryGray } from \"../constants\"\r\n\r\nfunction Connections(props){\r\n\r\n    const [image, setImage] = useState(props.cimage);\r\n    return(\r\n        <>\r\n        <Flex>\r\n            <Box w=\"390px\" p={4} bg={kPrimaryGray}>\r\n                <HStack  spacing=\"3rem\">\r\n                {props.cimage!=null?(\r\n                     <Image src={props.cimage}  borderRadius=\"full\" boxSize=\"3rem\" />\r\n                 \r\n                 ) :(\r\n                     <Avatar name={props.cname} src=\"https://bit.ly/broken-link\" />\r\n                 )\r\n                }\r\n                \r\n                <Heading size=\"sm\" color={kPrimaryBlackDark}>{props.cname}</Heading>\r\n                <Link color=\"blue.200\" fontSize=\"md\"href={props.plink} textAlign=\"end\">\r\n                        View\r\n                    </Link>\r\n        \r\n                </HStack>\r\n            </Box>\r\n        </Flex>\r\n\r\n    </>\r\n    )\r\n}\r\nConnections.propTypes = {\r\n    name: PropTypes.string,\r\n    image: PropTypes.string,\r\n    plink: PropTypes.string,\r\n  }\r\n  Connections.defaultProps =   {\r\n      image:\"null\"\r\n  }\r\n  export default Connections  ","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\constants.js",["191"],"export const  kPrimaryBlack = \"#263238\";\r\nexport const kPrimaryBlackDark = \"#000a12\";\r\nexport const kPrimaryBlackLight = \"#4f5b62\";\r\nexport const kPrimaryGray = \"#E2E8F0\";\r\n\r\n//SECONDARY\r\nexport const kSecondaryBlue = \"#01579b\";\r\nexport const kSecondaryBlueDark = \"#002f6c\";\r\nexport const kSecondaryBlueLight = \"#4f83cc\";\r\n\r\nexport default {kPrimaryBlack,kPrimaryBlackDark,kPrimaryBlackLight,kPrimaryGray,\r\nkSecondaryBlue,kSecondaryBlueDark,kSecondaryBlueLight}\r\n","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\screens\\Login.jsx",["192"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Skills\\Skill\\Skill.js",["193","194","195","196"],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":2,"column":47,"nodeType":"203","messageId":"204","endLine":2,"endColumn":56},{"ruleId":"201","severity":1,"message":"205","line":4,"column":15,"nodeType":"203","messageId":"204","endLine":4,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":12,"column":92,"nodeType":"208","endLine":12,"endColumn":98},{"ruleId":"209","severity":1,"message":"210","line":44,"column":17,"nodeType":"211","messageId":"212","endLine":44,"endColumn":19},{"ruleId":"209","severity":1,"message":"210","line":51,"column":17,"nodeType":"211","messageId":"212","endLine":51,"endColumn":19},{"ruleId":"201","severity":1,"message":"213","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":23},{"ruleId":"201","severity":1,"message":"214","line":21,"column":10,"nodeType":"203","messageId":"204","endLine":21,"endColumn":15},{"ruleId":"201","severity":1,"message":"215","line":22,"column":10,"nodeType":"203","messageId":"204","endLine":22,"endColumn":15},{"ruleId":"201","severity":1,"message":"216","line":28,"column":10,"nodeType":"203","messageId":"204","endLine":28,"endColumn":26},{"ruleId":"201","severity":1,"message":"217","line":28,"column":28,"nodeType":"203","messageId":"204","endLine":28,"endColumn":47},{"ruleId":"201","severity":1,"message":"218","line":29,"column":10,"nodeType":"203","messageId":"204","endLine":29,"endColumn":25},{"ruleId":"201","severity":1,"message":"219","line":29,"column":27,"nodeType":"203","messageId":"204","endLine":29,"endColumn":45},{"ruleId":"201","severity":1,"message":"220","line":32,"column":15,"nodeType":"203","messageId":"204","endLine":32,"endColumn":21},{"ruleId":"209","severity":1,"message":"210","line":34,"column":31,"nodeType":"211","messageId":"212","endLine":34,"endColumn":33},{"ruleId":"197","replacedBy":"221"},{"ruleId":"199","replacedBy":"222"},{"ruleId":"201","severity":1,"message":"223","line":21,"column":10,"nodeType":"203","messageId":"204","endLine":21,"endColumn":25},{"ruleId":"201","severity":1,"message":"224","line":22,"column":10,"nodeType":"203","messageId":"204","endLine":22,"endColumn":21},{"ruleId":"201","severity":1,"message":"225","line":23,"column":10,"nodeType":"203","messageId":"204","endLine":23,"endColumn":25},{"ruleId":"201","severity":1,"message":"223","line":21,"column":10,"nodeType":"203","messageId":"204","endLine":21,"endColumn":25},{"ruleId":"201","severity":1,"message":"226","line":3,"column":15,"nodeType":"203","messageId":"204","endLine":3,"endColumn":22},{"ruleId":"201","severity":1,"message":"227","line":3,"column":30,"nodeType":"203","messageId":"204","endLine":3,"endColumn":38},{"ruleId":"201","severity":1,"message":"228","line":3,"column":40,"nodeType":"203","messageId":"204","endLine":3,"endColumn":46},{"ruleId":"201","severity":1,"message":"229","line":6,"column":13,"nodeType":"203","messageId":"204","endLine":6,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":39,"column":24,"nodeType":"211","messageId":"212","endLine":39,"endColumn":26},{"ruleId":"209","severity":1,"message":"210","line":44,"column":31,"nodeType":"211","messageId":"212","endLine":44,"endColumn":33},{"ruleId":"209","severity":1,"message":"210","line":49,"column":31,"nodeType":"211","messageId":"212","endLine":49,"endColumn":33},{"ruleId":"209","severity":1,"message":"210","line":52,"column":31,"nodeType":"211","messageId":"212","endLine":52,"endColumn":33},{"ruleId":"201","severity":1,"message":"230","line":1,"column":67,"nodeType":"203","messageId":"204","endLine":1,"endColumn":77},{"ruleId":"209","severity":1,"message":"210","line":40,"column":32,"nodeType":"211","messageId":"212","endLine":40,"endColumn":34},{"ruleId":"209","severity":1,"message":"210","line":40,"column":61,"nodeType":"211","messageId":"212","endLine":40,"endColumn":63},{"ruleId":"209","severity":1,"message":"231","line":67,"column":31,"nodeType":"211","messageId":"212","endLine":67,"endColumn":33},{"ruleId":"209","severity":1,"message":"210","line":154,"column":20,"nodeType":"211","messageId":"212","endLine":154,"endColumn":22},{"ruleId":"209","severity":1,"message":"210","line":168,"column":27,"nodeType":"211","messageId":"212","endLine":168,"endColumn":29},{"ruleId":"209","severity":1,"message":"210","line":179,"column":27,"nodeType":"211","messageId":"212","endLine":179,"endColumn":29},{"ruleId":"209","severity":1,"message":"210","line":196,"column":20,"nodeType":"211","messageId":"212","endLine":196,"endColumn":22},{"ruleId":"209","severity":1,"message":"210","line":208,"column":27,"nodeType":"211","messageId":"212","endLine":208,"endColumn":29},{"ruleId":"209","severity":1,"message":"210","line":213,"column":27,"nodeType":"211","messageId":"212","endLine":213,"endColumn":29},{"ruleId":"201","severity":1,"message":"232","line":20,"column":24,"nodeType":"203","messageId":"204","endLine":20,"endColumn":37},{"ruleId":"201","severity":1,"message":"233","line":23,"column":12,"nodeType":"203","messageId":"204","endLine":23,"endColumn":21},{"ruleId":"201","severity":1,"message":"234","line":24,"column":12,"nodeType":"203","messageId":"204","endLine":24,"endColumn":17},{"ruleId":"209","severity":1,"message":"210","line":39,"column":21,"nodeType":"211","messageId":"212","endLine":39,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":39,"column":43,"nodeType":"211","messageId":"212","endLine":39,"endColumn":45},{"ruleId":"209","severity":1,"message":"210","line":39,"column":67,"nodeType":"211","messageId":"212","endLine":39,"endColumn":69},{"ruleId":"201","severity":1,"message":"205","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"235","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"236","line":5,"column":5,"nodeType":"203","messageId":"204","endLine":5,"endColumn":11},{"ruleId":"201","severity":1,"message":"237","line":5,"column":13,"nodeType":"203","messageId":"204","endLine":5,"endColumn":18},{"ruleId":"201","severity":1,"message":"238","line":5,"column":20,"nodeType":"203","messageId":"204","endLine":5,"endColumn":32},{"ruleId":"201","severity":1,"message":"239","line":5,"column":34,"nodeType":"203","messageId":"204","endLine":5,"endColumn":46},{"ruleId":"201","severity":1,"message":"240","line":6,"column":7,"nodeType":"203","messageId":"204","endLine":6,"endColumn":23},{"ruleId":"201","severity":1,"message":"241","line":6,"column":31,"nodeType":"203","messageId":"204","endLine":6,"endColumn":44},{"ruleId":"201","severity":1,"message":"242","line":6,"column":46,"nodeType":"203","messageId":"204","endLine":6,"endColumn":57},{"ruleId":"201","severity":1,"message":"243","line":7,"column":6,"nodeType":"203","messageId":"204","endLine":7,"endColumn":14},{"ruleId":"201","severity":1,"message":"244","line":10,"column":12,"nodeType":"203","messageId":"204","endLine":10,"endColumn":17},{"ruleId":"201","severity":1,"message":"245","line":10,"column":19,"nodeType":"203","messageId":"204","endLine":10,"endColumn":27},{"ruleId":"246","severity":1,"message":"247","line":11,"column":1,"nodeType":"248","endLine":12,"endColumn":55},{"ruleId":"201","severity":1,"message":"249","line":100,"column":13,"nodeType":"203","messageId":"204","endLine":100,"endColumn":25},{"ruleId":"201","severity":1,"message":"250","line":22,"column":8,"nodeType":"203","messageId":"204","endLine":22,"endColumn":13},{"ruleId":"201","severity":1,"message":"251","line":23,"column":74,"nodeType":"203","messageId":"204","endLine":23,"endColumn":93},{"ruleId":"209","severity":1,"message":"231","line":84,"column":33,"nodeType":"211","messageId":"212","endLine":84,"endColumn":35},{"ruleId":"209","severity":1,"message":"210","line":95,"column":28,"nodeType":"211","messageId":"212","endLine":95,"endColumn":30},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'fname' is assigned a value but never used.","'lname' is assigned a value but never used.","'isChangePassword' is assigned a value but never used.","'setIsChangePassword' is assigned a value but never used.","'isDeleteAccount' is assigned a value but never used.","'setIsDeleteAccount' is assigned a value but never used.","'result' is assigned a value but never used.",["252"],["253"],"'currentpassword' is assigned a value but never used.","'newpassword' is assigned a value but never used.","'confnewpassword' is assigned a value but never used.","'Heading' is defined but never used.","'WrapItem' is defined but never used.","'Center' is defined but never used.","'actions' is defined but never used.","'ScrollView' is defined but never used.","Expected '!==' and instead saw '!='.","'setIsLoggedIn' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalCloseButton' is defined but never used.","'useDisclosure' is defined but never used.","'ModalFooter' is defined but never used.","'Textarea' is defined but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'authRedirect' is assigned a value but never used.","'axios' is defined but never used.","'kSecondaryBlueLight' is defined but never used.","no-global-assign","no-unsafe-negation"]