[{"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\index.js":"1","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\App.js":"2","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\reducers\\auth.js":"3","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\actionTypes.js":"4","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\auth.js":"5","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Footer.jsx":"6","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Header.jsx":"7","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Main.jsx":"8","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\ajax.js":"9","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\constants.js":"10","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\ProfileSettings.jsx":"11","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Logout.jsx":"12","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\SignUp.jsx":"13","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Profile.jsx":"14","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Login.jsx":"15","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\ChangePassword.jsx":"16","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\DeleteAccount.jsx":"17","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Home.jsx":"18","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Input\\Input.js":"19","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Button\\Button.js":"20","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Spinner\\Spinner.js":"21","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ProfileInfo.jsx":"22","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ErrorMessage.jsx":"23","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\TempBox.jsx":"24","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ReccomendationPost.js":"25","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Skill.js":"26","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Reccomendation.js":"27","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Connection.js":"28","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\constants.js":"29","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\screens\\Login.jsx":"30"},{"size":829,"mtime":1613722046491,"results":"31","hashOfConfig":"32"},{"size":845,"mtime":1613722046205,"results":"33","hashOfConfig":"32"},{"size":1566,"mtime":1613722046631,"results":"34","hashOfConfig":"32"},{"size":233,"mtime":1613722046630,"results":"35","hashOfConfig":"32"},{"size":1843,"mtime":1613722046630,"results":"36","hashOfConfig":"32"},{"size":754,"mtime":1613722046292,"results":"37","hashOfConfig":"32"},{"size":2375,"mtime":1613722046324,"results":"38","hashOfConfig":"32"},{"size":1345,"mtime":1613815292186,"results":"39","hashOfConfig":"32"},{"size":138,"mtime":1613722046631,"results":"40","hashOfConfig":"32"},{"size":343,"mtime":1613722046632,"results":"41","hashOfConfig":"32"},{"size":6394,"mtime":1613722046559,"results":"42","hashOfConfig":"32"},{"size":536,"mtime":1613722046544,"results":"43","hashOfConfig":"32"},{"size":5752,"mtime":1613829843640,"results":"44","hashOfConfig":"32"},{"size":2311,"mtime":1613722046545,"results":"45","hashOfConfig":"32"},{"size":6221,"mtime":1613794983782,"results":"46","hashOfConfig":"32"},{"size":5941,"mtime":1613722046579,"results":"47","hashOfConfig":"32"},{"size":3729,"mtime":1613722046611,"results":"48","hashOfConfig":"32"},{"size":1468,"mtime":1613722046491,"results":"49","hashOfConfig":"32"},{"size":1845,"mtime":1613722046387,"results":"50","hashOfConfig":"32"},{"size":305,"mtime":1613722046346,"results":"51","hashOfConfig":"32"},{"size":178,"mtime":1613722046390,"results":"52","hashOfConfig":"32"},{"size":1672,"mtime":1613722046418,"results":"53","hashOfConfig":"32"},{"size":351,"mtime":1613722046281,"results":"54","hashOfConfig":"32"},{"size":5906,"mtime":1613722046490,"results":"55","hashOfConfig":"32"},{"size":3713,"mtime":1613722046456,"results":"56","hashOfConfig":"32"},{"size":7519,"mtime":1613722046472,"results":"57","hashOfConfig":"32"},{"size":1610,"mtime":1613722046418,"results":"58","hashOfConfig":"32"},{"size":1340,"mtime":1613722046279,"results":"59","hashOfConfig":"32"},{"size":463,"mtime":1613722046490,"results":"60","hashOfConfig":"32"},{"size":4791,"mtime":1613829565214,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1p7gug7",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\index.js",[],["136","137"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\App.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\reducers\\auth.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\actionTypes.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\auth.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Footer.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Header.jsx",["138","139","140","141","142"],"import { Input, Heading, InputGroup, InputLeftElement, Box,\r\n    HStack, IconButton, Spacer,Button, Image, Container} from \"@chakra-ui/react\"\r\nimport { Search2Icon,BellIcon,SettingsIcon } from '@chakra-ui/icons'\r\nimport {React,useState} from 'react'\r\nimport { kPrimaryBlack, kSecondaryBlue } from '../utils/constants'\r\nimport logo from '../assets/logo.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n\r\n   return ([\r\n           <Box bg={kPrimaryBlack} w=\"100%\" p={5}  position=\"fixed\" color=\"white\" h = {16} p= {2}>\r\n               <HStack>\r\n                    <Image \r\n                        src = {logo}\r\n                        htmlWidth = \"60px\"\r\n                        />\r\n                    <Heading  size=\"md\" color=\"black.500\">\r\n                        Volunteer Circle\r\n                    </Heading>\r\n                    <Spacer />\r\n                   <InputGroup w=\"50%\">\r\n                       <InputLeftElement\r\n                       pointerEvents=\"none\"\r\n                       children={<Search2Icon color=\"white.100\" />}\r\n                       \r\n                       />\r\n                       <Input type=\"search\" placeholder=\"Search\" color=\"black.400\"/>\r\n                       <IconButton aria-label=\"Search database\" icon={<Search2Icon />} bg=\"blueGreen.400\"/>\r\n                   </InputGroup>\r\n                   <Spacer/>\r\n                   <HStack>\r\n                   <SignButton type={props.type}/>                  \r\n                   </HStack>\r\n                   \r\n               </HStack>\r\n           </Box>,\r\n           <Box h = {16} bg = {kSecondaryBlue}/>\r\n   ]\r\n   )\r\n}\r\n\r\nfunction SignButton(props){\r\n   if(props.type==false){\r\n       //Guest\r\n       return(\r\n           <HStack>\r\n           <Button size=\"md\" bg=\"blueGreen.100\" >Sign In</Button> \r\n       </HStack>); \r\n   }\r\n   if(props.type==true){\r\n       return(\r\n           <HStack>\r\n               <IconButton icon={<BellIcon />} bg=\"blueGreen.200\"/>\r\n                <IconButton icon={<SettingsIcon />} bg=\"blueGreen.200\" />\r\n                <NavLink\r\n                    to=\"/logout\"\r\n                    activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\"\r\n                    }}\r\n                    >Sign Out</NavLink>\r\n           </HStack>\r\n           );\r\n   }\r\n   \r\n}\r\n\r\n\r\nexport default Header;","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Main.jsx",["143"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\ajax.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\constants.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\ProfileSettings.jsx",["144","145","146","147","148","149"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  Image,\r\n  Stack\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport anonymous from '../assets/anonymous.png';\r\nimport { kPrimaryGray } from '../utils/constants';\r\n\r\nexport default function Profile() {\r\n  const [fname, setFName] = useState('');\r\n  const [lname, setLName] = useState('');\r\n \r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n  const [isDeleteAccount, setIsDeleteAccount] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //save fname and lname\r\n      setIsLoggedIn(true);\r\n      setIsLoading(false);\r\n      \r\n    } catch (error) {\r\n      setError('Invalid');\r\n      setIsLoading(false);\r\n      \r\n    }\r\n  };\r\n\r\n  //image uploading\r\n  const uploadedImage = React.useRef(null);\r\n  const imageUploader = React.useRef(null);\r\n\r\n  const handleImageUpload = e => {\r\n    const [file] = e.target.files;\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      const { current } = uploadedImage;\r\n      current.file = file;\r\n      reader.onload = e => {\r\n        current.src = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" >\r\n      <Box\r\n        p={8}\r\n        w = \"30%\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n        bg = {kPrimaryGray}\r\n      >\r\n        {isLoggedIn ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Changed Profile!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsLoggedIn(false)}\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box >\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\" >\r\n              <Heading>Profile</Heading>\r\n            </Box>\r\n            <Box height=\"20px\"></Box>\r\n            <Box >\r\n              <center>\r\n              <Image                  \r\n                  borderRadius=\"full\"\r\n                  width=\"50%\"\r\n                  height=\"50%\"\r\n                  objectFit=\"cover\"\r\n                  src = {anonymous}\r\n                  alt=\"Profile Picture\"\r\n                  ref={uploadedImage}\r\n                />\r\n                </center>\r\n            </Box>\r\n            <Stack align=\"center\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                ref={imageUploader}\r\n                style={{\r\n                  display: \"none\"\r\n                }}\r\n              />\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                variant=\"solid\"\r\n                type=\"submit\"\r\n                alignItems=\"center\"\r\n                mt={4}\r\n                onClick={() => imageUploader.current.click()}\r\n              >\r\n                {isLoading ? (\r\n                  <CircularProgress\r\n                    isIndeterminate\r\n                    size=\"sm\"\r\n                    color=\"teal\"\r\n                                      \r\n                  />\r\n                ) : (\r\n                  'Change Picture'\r\n                )}\r\n              </Button>\r\n            </Stack>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl>\r\n                    <Box borderColor = \"blue.500\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    size=\"lg\"\r\n                    onChange={event => setFName(event.currentTarget.value)}\r\n                  />\r\n                  </Box>\r\n                </FormControl>\r\n                <Box height=\"20px\"></Box>\r\n                <FormControl>\r\n                <Box borderColor = \"blue.500\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    colorScheme = \"black\"\r\n                    size=\"lg\"\r\n                    onChange={event => setLName(event.currentTarget.value)}\r\n                  />\r\n                  </Box>\r\n                </FormControl>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Save'\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Change Password'\r\n                  )}\r\n                </Button>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  colorScheme=\"red\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Delete Account'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Logout.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\SignUp.jsx",["150","151","152","153","154","155","156","157"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Profile.jsx",["158","159","160","161","162","163"],"import React, { Component } from \"react\";\r\nimport ProfileInfo from \"../components/ProfileInfo\";\r\nimport { Box, Heading, Wrap, WrapItem, Center } from \"@chakra-ui/react\"\r\nimport TempBox from \"../components/TempBox\"\r\nimport axios from \"axios\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            profile:{},\r\n            skill: {},\r\n            recommendation:{},\r\n            connections:{},\r\n\r\n        };\r\n    }\r\n\r\n    async componentWillMount(){\r\n        \r\n        let data = {\r\n            headers: {\r\n            'Access-Control-Allow-Headers': 'x-Auth-token',\r\n            'x-Auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MzMsImlhdCI6MTYxMTQ5OTk5NSwiZXhwIjoxNjExNTAzNTk1fQ.zlAdtIrZDa20SrzrahSdMVmPmytUhmBhVQJGP9MBJ5M'\r\n            }\r\n          }\r\n        const token = JSON.parse(localStorage.getItem('token'));\r\n        const result = await axios.get(\"http://localhost:5000/api/users/2\",Object.assign({}, {}, data))\r\n        .then((result) => {\r\n            console.log(result);\r\n            if(result.data.err==0){\r\n                this.setState({\r\n                    profile: result.data.obj[0][0],\r\n                    skill: result.data.obj[1],\r\n                    recommendation: result.data.obj[2],\r\n                    connections: result.data.obj[3]\r\n                });\r\n                console.log(this.state.skill);\r\n            }else{\r\n                console.log(result.data.msg);\r\n            }\r\n            \r\n        },\r\n        (error) =>{\r\n            console.log(\"Error\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileInfo name={this.state.profile.first_name+\" \"+this.state.profile.last_name} button=\"1\" />\r\n                <Box h={3}/>\r\n                <Wrap justify=\"space-around\">\r\n                    {/* visit method will show whether a user or guest */}\r\n                    <TempBox name = \"Skills\" data={this.state.skill} visit={false}/>\r\n                    <TempBox name = \"Connections\" data={this.state.connections} visit={false}/>\r\n                    <TempBox name = \"Recommendations\" data={this.state.recommendation} visit={false}/>\r\n                </Wrap>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Login.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\ChangePassword.jsx",["164","165","166"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Icon\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nexport default function ChangePassword() {\r\n  const [currentpassword, setCurrentPassword] = useState('');\r\n  const [newpassword, setNewPassword] = useState('');\r\n  const [confnewpassword, setConfNewPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //if(newpassword===confnewpassword) && await(){\r\n      \r\n      //await() -confirm the current password from back end\r\n\r\n      setIsVerified(true);\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n      \r\n      \r\n\r\n      \r\n    } catch (error) {\r\n      setError('Invalid password');\r\n      setIsLoading(false);\r\n      setCurrentPassword('');\r\n      setNewPassword('');\r\n      setConfNewPassword('');\r\n      setShowPassword(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        {isVerified ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Password Changed!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsVerified(false)} //go back to the home profile\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\">\r\n              <Heading>Change Password</Heading>\r\n            </Box>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Current Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setCurrentPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>New Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setNewPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Confirm New Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setConfNewPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <Button\r\n                  variantColor=\"teal\"\r\n                  variant=\"outline\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Confirm'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\DeleteAccount.jsx",["167"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Icon\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nexport default function DeleteAccount() {\r\n  const [currentpassword, setCurrentPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //await() -confirm the current password from back end\r\n      \r\n      setIsVerified(true);\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n      \r\n      \r\n\r\n      \r\n    } catch (error) {\r\n      setError('Invalid password');\r\n      setIsLoading(false);\r\n      setCurrentPassword('');\r\n      setShowPassword(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        {isVerified ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Password Changed!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsVerified(false)} //go back to the home profile\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\">\r\n              <Heading>Delete Account</Heading>\r\n            </Box>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Current Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setCurrentPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                \r\n                \r\n                <Button\r\n                  colorScheme = \"red\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Delete'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Home.jsx",["168","169","170","171"],"import React, { Component } from \"react\";\r\nimport ProfileInfo from \"../components/ProfileInfo\";\r\nimport { Box, Heading, Wrap, WrapItem, Center } from \"@chakra-ui/react\"\r\nimport TempBox from \"../components/TempBox\"\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions/auth'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        if (this.props.user !== null) {\r\n            console.log(this.props.user[1]);\r\n            return (\r\n                <div>\r\n                    <ProfileInfo name={this.props.user[0][0].first_name+\" \"+this.props.user[0][0].last_name} button=\"0\" />\r\n                    <Box h={3}/>\r\n                    <Wrap justify=\"space-around\">\r\n                        {/* visit method will show whether a user or guest */}\r\n                        <TempBox name = \"Skills\" data={this.props.user[1]} visit={false}/>\r\n                        <TempBox name = \"Connections\" data={this.props.user[2]} visit={false}/>\r\n                        <TempBox name = \"Recommendations\" data={this.props.user[3]} visit={false}/>\r\n                    </Wrap>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <p>Loading</p>;\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.token !== null,\r\n      user: state.user\r\n    };\r\n  };\r\n\r\nexport default withRouter( connect( mapStateToProps )( Home ) );","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Input\\Input.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Button\\Button.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Login\\Spinner\\Spinner.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ProfileInfo.jsx",["172","173","174","175"],"import React from 'react';\r\n\r\nimport anonymous from '../assets/anonymous.png';\r\nimport { Image, Button, Box, Heading } from '@chakra-ui/react';\r\nimport { kSecondaryBlue} from '../utils/constants';\r\n\r\n\r\n/**\r\n * Information of the user.\r\n * \r\n * @param name - Name of the user\r\n * @param type - 0-guest/home, 1-add, 2-remove 3-pending\r\n */\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <center>\r\n            <Box w=\"100%\" border = \"5px\"  bg = {kSecondaryBlue}>\r\n                <Image\r\n                    src = {anonymous} //TODO: Need a method to update the profile pic\r\n                    htmlWidth=\"150px\"\r\n                />\r\n                <Heading fontSize=\"25px\" color=\"white\"> {props.name} </Heading>\r\n                <Box h={3}/>\r\n                <ConnectionButton type = {props.button}/>\r\n                <Box h={3}/>\r\n            </Box>\r\n        </center>\r\n    );\r\n}\r\n\r\n/**\r\n * Add Connection / Remove Connection button display\r\n * \r\n * @param {*} props \r\n */\r\n//TODO: Add onClick method\r\nconst ConnectionButton = (props) => {\r\n    if (props.type == \"1\") {\r\n        return (\r\n        <Button colorScheme=\"blue\" variant=\"solid\" >\r\n        Add Connection\r\n         </Button>);\r\n    } else if (props.type == \"2\") {\r\n        return (\r\n        <Button colorScheme=\"red\" variant=\"solid\">\r\n        Remove Connection\r\n        </Button>);\r\n    } else if (props.type == \"3\") {\r\n        return (\r\n        <Heading color = \"green.100\" size = \"md\">Request Pending</Heading>);  \r\n    } else if (props.type == \"0\") {\r\n        return (<div></div>)\r\n    } else {\r\n        throw new Error(\"Invalid type for ConnectionButton\");\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ErrorMessage.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\TempBox.jsx",["176","177","178","179","180","181","182","183","184","185","186","187"],"import { Box, Button, Heading, WrapItem, Center,Text, VStack , ScrollView} from \"@chakra-ui/react\"\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport Skill from './Skill';\r\nimport Connections from './Connection';\r\nimport Reccomendation from './Reccomendation';\r\nimport ReccomendationPost from './ReccomendationPost';\r\n\r\n\r\nclass TempBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          details: props.data\r\n        };\r\n        console.log(this.props.data);\r\n      }\r\n      componentDidMount(){\r\n        //this.callEvents();\r\n      }\r\n\r\n      eventHandler = (ev) => {\r\n       // this.callEvents();\r\n        }\r\n\r\n        callEvents = (e) => {\r\n            axios.get(\"http://localhost:5000/api/users\",{},{\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-auth-token': 'avishka'\r\n            }\r\n          })\r\n        .then((result) => {\r\n            console.log(result.data);\r\n            if(result.data.err!=1){\r\n                this.setState({\r\n                    users: result\r\n                });\r\n                //console.log(this.state.users);\r\n            }else{\r\n\r\n            }\r\n            \r\n        },\r\n        (error) =>{\r\n            console.log(\"Error\");\r\n        });\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <WrapItem>\r\n            <Box bg=\"gray.500\" w=\"450px\" h=\"450px\" color=\"white\">\r\n                <Center m = {4}>\r\n                    <Heading size=\"md\" color=\"gray.600\">{this.props.name}</Heading>\r\n                </Center>\r\n                \r\n                    <VStack overflowY=\"scroll\" h=\"320px\" w=\"436px\" ml=\"2\" mb=\"5\">\r\n                    \r\n                    <BoxContent type = {this.props.name} detailss={this.props.data}/>\r\n                \r\n                    </VStack>\r\n\r\n                <VStack>\r\n                \r\n                </VStack>\r\n                <Center>\r\n                    <Box h={3}/>\r\n                        <EventButton new = {this.eventHandler.bind(this)} type = {this.props.name}/>\r\n                    <Box h={3}/>\r\n                </Center>\r\n                \r\n            </Box>\r\n            \r\n          </WrapItem>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nconst BoxContent = (props) => {\r\n    if (props.type == \"Skills\") {\r\n        return (\r\n            <>\r\n            {/* <Skill skillname=\"Organizing\" validations={4} visit={true}/>\r\n            <Skill skillname=\"Organizing\" validations={4} visit={true}/>\r\n            <Skill skillname=\"Organizing\" validations={4} visit={true}/>\r\n            <Skill skillname=\"Organizing\" validations={4} visit={true}/>\r\n            <Skill skillname=\"Organizing\" validations={4} visit={true}/> */}\r\n                {/* {\r\n                    \r\n                    props.detailss.map((skill, i) =>\r\n                        <Skill key={i} skillname={skill.name} validations={skill.validations} visit={false}/>\r\n\r\n                    )\r\n                    \r\n                } */}\r\n                \r\n            </>\r\n            );\r\n    } else if (props.type == \"Connections\") {\r\n        return (\r\n            \r\n            <>\r\n            {/* <Connections cname=\"Thushani Jayasekera\" cimage={null}/>\r\n            <Connections cname=\"Thushani Jayasekera\" cimage={null}/>\r\n            <Connections cname=\"Thushani Jayasekera\" cimage={null}/>\r\n            <Connections cname=\"Thushani Jayasekera\" cimage={null}/>\r\n            <Connections cname=\"Thushani Jayasekera\" cimage={null}/> */}\r\n                {/* {\r\n                    \r\n                    props.detailss.map((connection, i) =>\r\n                        <Connections key={i} cname={connection.first_name+\" \"+connection.last_name} cimage={null}/>\r\n                    )\r\n                    \r\n                } */}\r\n                \r\n            </>\r\n            );\r\n    } else if (props.type == \"Recommendations\") {\r\n        return (\r\n            \r\n            <>\r\n            {/* <Reccomendation postedBy=\"Thshhshs\" postedImage=\"null\" reccomendation=\"very gooddd fkejfkjfk mfsfmsfm smfs,fm\"/>\r\n            <Reccomendation postedBy=\"Thshhshs\" postedImage=\"null\" reccomendation=\"very gooddd fkejfkjfk mfsfmsfm smfs,fm\"/>\r\n            <Reccomendation postedBy=\"Thshhshs\" postedImage=\"null\" reccomendation=\"very gooddd fkejfkjfk mfsfmsfm smfs,fm\"/>\r\n            <Reccomendation postedBy=\"Thshhshs\" postedImage=\"null\" reccomendation=\"very gooddd fkejfkjfk mfsfmsfm smfs,fm\"/>\r\n            <Reccomendation postedBy=\"Thshhshs\" postedImage=\"null\" reccomendation=\"very gooddd fkejfkjfk mfsfmsfm smfs,fm\"/> */}\r\n                {/* {\r\n                    \r\n                    props.detailss.map((recommendation, i) =>\r\n                        <Reccomendation key={i} postedBy={recommendation.first_name+\" \"+recommendation.last_name} postedImage=\"null\" reccomendation={recommendation.description}/>\r\n                    )\r\n                    \r\n                } */}\r\n                \r\n            </>\r\n            );  \r\n    } else {\r\n        throw new Error(\"Invalid type for ConnectionButton\");\r\n    }\r\n}\r\n\r\nconst EventButton = (props) => {\r\n    if (props.type == \"Skills\") {\r\n        return (\r\n            <Button onClick={props.new} colorScheme=\"blue\" variant=\"solid\" >\r\n            Add Skill\r\n            </Button>);\r\n    } else if (props.type == \"Connections\") {\r\n        return (\r\n            <Button onClick={props.new} colorScheme=\"blue\" variant=\"solid\">\r\n            Add Connection\r\n            </Button>);\r\n    } else if (props.type == \"Recommendations\") {\r\n        return (\r\n            <ReccomendationPost onClick={props.new} name=\"Thushani Jayasekera\" image=\"null\"/>);\r\n            // <Button  colorScheme=\"blue\" variant=\"solid\">\r\n            // Add Recommendation\r\n            // </Button>);  \r\n    } else {\r\n        throw new Error(\"Invalid type for ConnectionButton\");\r\n    }\r\n}\r\n\r\nexport default TempBox;","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ReccomendationPost.js",["188","189","190","191","192","193"],"import { React, useState } from \"react\"\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport {\r\n    Button, Modal, ModalOverlay, ModalContent, Image\r\n    , ModalCloseButton, Text, useDisclosure, ModalFooter,\r\n     Textarea, Avatar, Stack, Heading, Box\r\n} from '@chakra-ui/react';\r\nimport { kPrimaryBlackLight,kSecondaryBlueLight } from '../constants'\r\nconst ReccomendationPost = props => {\r\n    return (\r\n        <>\r\n            <ReccomendationButton visit={props.visit} name={props.name} />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction ReccomendationButton(props) {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n    const[isreccomended,setIsReccomended]=useState(false);\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleReccomendation= async event=>{\r\n        setIsLoading(true);\r\n        try{\r\n            //wait for update validation in db\r\n            setIsReccomended(true);\r\n            setIsLoading(false);\r\n\r\n        }catch{\r\n            setIsReccomended(false);\r\n            setIsLoading(false);\r\n            setError(\"Couldn't Post Reccomendation\")\r\n        }\r\n    }\r\n    if (props.visit == true && isLoggedIn == true && isreccomended==false) {\r\n\r\n        return (\r\n            <>\r\n                <Box>\r\n                    <Button onClick={onOpen} bg={kSecondaryBlueLight} isDisabled={false}>Post Reccomendation</Button>\r\n                </Box>\r\n                <Modal isOpen={isOpen} onClose={onClose} color=\"black.700\" closeOnOverlayClick=\"false\">\r\n                    <ModalOverlay />\r\n                    <ModalContent>\r\n                        <Box bg={kPrimaryBlackLight} w=\"100%\" p={4} color=\"white\">\r\n                            <stack>\r\n                                <Heading color=\"black.400\" fontSize=\"lg\">\r\n                                    Post Reccomendation\r\n                </Heading>\r\n                                <br />\r\n                                <Stack direction=\"row\">\r\n                                {props.cimage!=null?(\r\n                                    <Image src={props.image}  borderRadius=\"full\" boxSize=\"3rem\" />\r\n                                \r\n                                ) :(\r\n                                    <Avatar name={props.name} src=\"https://bit.ly/broken-link\" />\r\n                                )\r\n                                }\r\n\r\n\r\n                                    <Text color={kSecondaryBlueLight}>\r\n                                        {props.name}\r\n                                    </Text>\r\n                   \r\n                                        <Textarea placeholder=\"Enter reccomendation\" color=\"black.400\" />\r\n                                    \r\n                                    <ModalCloseButton />\r\n                                </Stack>\r\n                            </stack>\r\n                            <ModalFooter>\r\n                                <Button colorScheme=\"blue\" mr={3} onClick={()=>handleReccomendation()}>\r\n                                    Post\r\n            </Button>\r\n                            </ModalFooter>\r\n                        </Box>\r\n                    </ModalContent>\r\n\r\n                </Modal>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <Button onClick={onOpen} bg={kSecondaryBlueLight}isDisabled={true}>Post Reccomendation</Button>\r\n            );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nReccomendationPost.propTypes = {\r\n    name: PropTypes.string,\r\n    image: PropTypes.string,\r\n    visit: PropTypes.bool\r\n}\r\nReccomendationPost.defaultProps = {\r\n    image: \"null\",\r\n    visit: true\r\n}\r\nexport default ReccomendationPost  \r\n","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Skill.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"//import { Link } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Spacer, Heading, Flex, Button, Box, HStack ,CircularProgress} from \"@chakra-ui/react\"\r\nimport { DeleteIcon,AddIcon} from '@chakra-ui/icons'\r\nimport {\r\n    Modal, ModalOverlay, ModalContent, Image\r\n    , ModalCloseButton, Text, useDisclosure, ModalFooter,\r\n     Textarea, Avatar, Stack\r\n} from '@chakra-ui/react';\r\nimport {\r\n    AlertDialog,Badge,\r\n    AlertDialogBody,\r\n    AlertDialogFooter,\r\n    AlertDialogHeader,\r\n    AlertDialogContent,\r\n    AlertDialogOverlay \r\n  } from \"@chakra-ui/react\"\r\n\r\nimport {React,useState,useRef, useEffect} from 'react' \r\nimport axios from 'axios';\r\nimport { kPrimaryBlack, kPrimaryBlackLight,kPrimaryGray, kSecondaryBlue, kSecondaryBlueDark, kSecondaryBlueLight } from '../constants'\r\nconst Skill=props=>{\r\n    \r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const onOpen = () => setIsOpen(true)\r\n    const cancelRef = useRef()\r\n    const [name, setName] = useState(props.name);\r\n    const [image, setimage]=useState(props.image)\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [validations, setValidations]=useState(props.validations)\r\n    const [skillname, setSkillname]=useState(props.skillname)\r\n    \r\n    const [error, setError] = useState('');\r\n\r\n    const handleValidation= event=>{\r\n        setIsLoading(true);\r\n        try{\r\n            //const res=axios.put('api/users/skills/:id',{data:validations+1})\r\n            setValidations(validations+1);\r\n            setIsLoading(false);\r\n\r\n        }catch{\r\n            setValidations(validations);\r\n            setIsLoading(false);\r\n            setError(\"Couldn't validate skill\")\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        handleValidation()\r\n        console.log(validations)\r\n    },[])\r\n\r\n    \r\nif(props.visit==\"0\"){\r\n    \r\n                \r\n                    \r\n    return (\r\n        <>\r\n        <Flex>\r\n            <Box w=\"390px\" p={4} bg={kPrimaryGray}>\r\n                <HStack  spacing=\"3rem\">\r\n                        \r\n                        \r\n                    <Badge ml=\"1\" fontSize=\"lg\" colorScheme=\"blue\" variant=\"outline\" borderRadius=\"5rem\">\r\n                        {validations}\r\n                    </Badge>\r\n                          \r\n                  \r\n                          \r\n                    <Heading size=\"md\" color={kSecondaryBlue}>{skillname}</Heading>\r\n                    \r\n                    <Spacer />\r\n                \r\n                   \r\n                    <Button rightIcon={<DeleteIcon />} colorScheme=\"red\"  onClick={() => setIsOpen(true)}></Button>\r\n                  \r\n                 \r\n                \r\n                        <AlertDialog\r\n                                    isOpen={isOpen}\r\n                                    leastDestructiveRef={cancelRef}\r\n                                    onClose={onClose}\r\n                                >\r\n                            <AlertDialogOverlay>\r\n                            <AlertDialogContent>\r\n                            <Box bg={kPrimaryBlackLight} w=\"100%\" p={4} color=\"white\">\r\n\r\n                            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                            Delete Skill\r\n                            </AlertDialogHeader>\r\n\r\n                            <AlertDialogBody>\r\n                            Are you sure? You can't undo this action afterwards.\r\n                            </AlertDialogBody>\r\n\r\n                            <AlertDialogFooter>\r\n                            <Button colorScheme={kPrimaryBlack} ref={cancelRef} onClick={onClose}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button colorScheme=\"red\" onClick={onClose} ml={3}>\r\n                            \r\n                                Delete\r\n                            </Button>\r\n                            </AlertDialogFooter>\r\n\r\n                            </Box>\r\n\r\n                            </AlertDialogContent>\r\n                            </AlertDialogOverlay>\r\n                        </AlertDialog>\r\n      \r\n                    </HStack>\r\n                    </Box>\r\n                    </Flex>\r\n                    </>\r\n                   \r\n        \r\n    );\r\n}else{\r\n    return (\r\n        <>\r\n            <Flex>\r\n                    <Box w=\"390px\" p={4} bg={kPrimaryGray}>\r\n                        <HStack  spacing=\"3rem\">\r\n                        <Badge ml=\"1\" fontSize=\"0.8em\" colorScheme=\"blue\" variant=\"outline\" borderRadius=\"5rem\">\r\n                            {validations}\r\n                            </Badge>\r\n                          \r\n                        <Heading size=\"md\" color={kSecondaryBlue}>{skillname}</Heading>\r\n                    \r\n                    <Spacer />\r\n                \r\n                    {isLoading ? (\r\n                     \r\n                     <CircularProgress isIndeterminate color=\"green.300\"/>\r\n                   \r\n                ) :(\r\n                   <>\r\n                    <Button rightIcon={<AddIcon />} colorScheme=\"blue\" onClick={()=> handleValidation()}>\r\n                    </Button>\r\n                    \r\n                    {/* <Modal isOpen={isOpen} onClose={onClose} color=\"black.700\" closeOnOverlayClick=\"false\">\r\n                    <ModalOverlay />\r\n                    <ModalContent>\r\n                        <Box bg={kPrimaryBlackLight} w=\"100%\" p={4} color=\"white\">\r\n                            <stack>\r\n                                <Heading color=\"black.400\" fontSize=\"lg\">\r\n                                    Skill Validation\r\n                </Heading>\r\n                                <br />\r\n                                <Stack direction=\"row\">\r\n                                {props.cimage!=null?(\r\n                                    <Image src={props.image}  borderRadius=\"full\" boxSize=\"3rem\" />\r\n                                \r\n                                ) :(\r\n                                    <Avatar name={props.name} src=\"https://bit.ly/broken-link\" />\r\n                                )\r\n                                }\r\n\r\n\r\n                                    <Text color={kSecondaryBlueLight}>\r\n                                        {name}\r\n                                    </Text>\r\n                    if({props.visit}===true){\r\n                                        <Textarea placeholder=\"Enter reason for skill Validation\" color=\"black.400\" />\r\n                                    }\r\n                                    <ModalCloseButton />\r\n                                </Stack>\r\n                            </stack>\r\n                            <ModalFooter>\r\n                                <Button colorScheme=\"blue\" mr={3} onClick={()=> handleValidation()}>\r\n                                    Post\r\n            </Button>\r\n                            </ModalFooter>\r\n                        </Box>\r\n                    </ModalContent>\r\n\r\n                </Modal> */}\r\n                </>\r\n)}\r\n\r\n                  \r\n                 </HStack>\r\n                    </Box>\r\n                    </Flex>\r\n                    </>\r\n                \r\n                  \r\n                    \r\n    \r\n    );\r\n}\r\n\r\n\r\n}\r\nSkill.propTypes = {\r\n    skillname: PropTypes.string,\r\n    validations:PropTypes.integer,\r\n    visit:PropTypes.bool\r\n  }\r\n  Skill.defaultProps =   {\r\n      \r\n      visit:\"1\",\r\n      validations:\"0\"\r\n  }\r\n  export default Skill","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Reccomendation.js",["217","218","219","220","221","222","223","224","225","226"],"import { React, useState } from \"react\"\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport {\r\n    Button, Modal, ModalOverlay, ModalContent, Image\r\n    , ModalCloseButton, Text, useDisclosure, ModalFooter,\r\n     Textarea, Avatar, Stack, Heading, Box, Divider\r\n} from '@chakra-ui/react';\r\n\r\nconst Reccomendation = props => {\r\n    return (\r\n        <>\r\n             <Box bg=\"white.200\" w=\"50%\" p={4} color=\"white\">\r\n                            <stack>\r\n                                \r\n                                \r\n                                <Stack direction=\"row\">\r\n                                    if({props.postedImage}!=null){\r\n                                        <Image src={props.postedImage} size=\"100%\" rounded=\"1rem\" shadow=\"2xl\" />\r\n                                    }\r\n                                    else{\r\n                                        <Avatar name={props.postedBy} src=\"https://bit.ly/broken-link\" />\r\n                                    }\r\n\r\n\r\n                                    <Heading color=\"black.400\" fontSize=\"lg\">\r\n                                                        {props.postedBy}\r\n                                    </Heading>\r\n                   \r\n                                </Stack>\r\n                                <Divider/>\r\n                                <Text color=\"black.900\" fontSize=\"md\" textAlign=\"left\">\r\n                                    {props.reccomendation}\r\n                                </Text>\r\n                            </stack>\r\n                            </Box>\r\n        </>\r\n    )\r\n}\r\nexport default Reccomendation","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Connection.js",["227","228"],"import {React,useState} from \"react\"\r\n//import { Link } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport {  Heading, Flex, Avatar, Box, HStack,Image,Link } from \"@chakra-ui/react\"\r\nimport { kPrimaryBlackDark, kPrimaryGray } from \"../constants\"\r\n\r\nfunction Connections(props){\r\n\r\n    const [image, setImage] = useState(props.cimage);\r\n    return(\r\n        <>\r\n        <Flex>\r\n            <Box w=\"390px\" p={4} bg={kPrimaryGray}>\r\n                <HStack  spacing=\"3rem\">\r\n                {props.cimage!=null?(\r\n                     <Image src={props.cimage}  borderRadius=\"full\" boxSize=\"3rem\" />\r\n                 \r\n                 ) :(\r\n                     <Avatar name={props.cname} src=\"https://bit.ly/broken-link\" />\r\n                 )\r\n                }\r\n                \r\n                <Heading size=\"sm\" color={kPrimaryBlackDark}>{props.cname}</Heading>\r\n                <Link color=\"blue.200\" fontSize=\"md\"href={props.plink} textAlign=\"end\">\r\n                        View\r\n                    </Link>\r\n        \r\n                </HStack>\r\n            </Box>\r\n        </Flex>\r\n\r\n    </>\r\n    )\r\n}\r\nConnections.propTypes = {\r\n    name: PropTypes.string,\r\n    image: PropTypes.string,\r\n    plink: PropTypes.string,\r\n  }\r\n  Connections.defaultProps =   {\r\n      image:\"null\"\r\n  }\r\n  export default Connections  ","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\constants.js",["229"],"export const  kPrimaryBlack = \"#263238\";\r\nexport const kPrimaryBlackDark = \"#000a12\";\r\nexport const kPrimaryBlackLight = \"#4f5b62\";\r\nexport const kPrimaryGray = \"#E2E8F0\";\r\n\r\n//SECONDARY\r\nexport const kSecondaryBlue = \"#01579b\";\r\nexport const kSecondaryBlueDark = \"#002f6c\";\r\nexport const kSecondaryBlueLight = \"#4f83cc\";\r\n\r\nexport default {kPrimaryBlack,kPrimaryBlackDark,kPrimaryBlackLight,kPrimaryGray,\r\nkSecondaryBlue,kSecondaryBlueDark,kSecondaryBlueLight}\r\n","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\screens\\Login.jsx",["230","231"],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":2,"column":47,"nodeType":"238","messageId":"239","endLine":2,"endColumn":56},{"ruleId":"236","severity":1,"message":"240","line":4,"column":15,"nodeType":"238","messageId":"239","endLine":4,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":12,"column":92,"nodeType":"243","endLine":12,"endColumn":98},{"ruleId":"244","severity":1,"message":"245","line":44,"column":17,"nodeType":"246","messageId":"247","endLine":44,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":51,"column":17,"nodeType":"246","messageId":"247","endLine":51,"endColumn":19},{"ruleId":"236","severity":1,"message":"248","line":2,"column":10,"nodeType":"238","messageId":"239","endLine":2,"endColumn":23},{"ruleId":"236","severity":1,"message":"249","line":21,"column":10,"nodeType":"238","messageId":"239","endLine":21,"endColumn":15},{"ruleId":"236","severity":1,"message":"250","line":22,"column":10,"nodeType":"238","messageId":"239","endLine":22,"endColumn":15},{"ruleId":"236","severity":1,"message":"251","line":28,"column":10,"nodeType":"238","messageId":"239","endLine":28,"endColumn":26},{"ruleId":"236","severity":1,"message":"252","line":28,"column":28,"nodeType":"238","messageId":"239","endLine":28,"endColumn":47},{"ruleId":"236","severity":1,"message":"253","line":29,"column":10,"nodeType":"238","messageId":"239","endLine":29,"endColumn":25},{"ruleId":"236","severity":1,"message":"254","line":29,"column":27,"nodeType":"238","messageId":"239","endLine":29,"endColumn":45},{"ruleId":"236","severity":1,"message":"255","line":2,"column":40,"nodeType":"238","messageId":"239","endLine":2,"endColumn":56},{"ruleId":"236","severity":1,"message":"256","line":6,"column":8,"nodeType":"238","messageId":"239","endLine":6,"endColumn":13},{"ruleId":"244","severity":1,"message":"245","line":33,"column":30,"nodeType":"246","messageId":"247","endLine":33,"endColumn":32},{"ruleId":"244","severity":1,"message":"245","line":33,"column":58,"nodeType":"246","messageId":"247","endLine":33,"endColumn":60},{"ruleId":"244","severity":1,"message":"245","line":38,"column":39,"nodeType":"246","messageId":"247","endLine":38,"endColumn":41},{"ruleId":"244","severity":1,"message":"245","line":104,"column":124,"nodeType":"246","messageId":"247","endLine":104,"endColumn":126},{"ruleId":"244","severity":1,"message":"245","line":104,"column":266,"nodeType":"246","messageId":"247","endLine":104,"endColumn":268},{"ruleId":"257","severity":1,"message":"258","line":114,"column":25,"nodeType":"259","endLine":114,"endColumn":37},{"ruleId":"236","severity":1,"message":"260","line":3,"column":15,"nodeType":"238","messageId":"239","endLine":3,"endColumn":22},{"ruleId":"236","severity":1,"message":"261","line":3,"column":30,"nodeType":"238","messageId":"239","endLine":3,"endColumn":38},{"ruleId":"236","severity":1,"message":"262","line":3,"column":40,"nodeType":"238","messageId":"239","endLine":3,"endColumn":46},{"ruleId":"236","severity":1,"message":"263","line":28,"column":15,"nodeType":"238","messageId":"239","endLine":28,"endColumn":20},{"ruleId":"236","severity":1,"message":"264","line":29,"column":15,"nodeType":"238","messageId":"239","endLine":29,"endColumn":21},{"ruleId":"244","severity":1,"message":"245","line":32,"column":31,"nodeType":"246","messageId":"247","endLine":32,"endColumn":33},{"ruleId":"236","severity":1,"message":"265","line":21,"column":10,"nodeType":"238","messageId":"239","endLine":21,"endColumn":25},{"ruleId":"236","severity":1,"message":"266","line":22,"column":10,"nodeType":"238","messageId":"239","endLine":22,"endColumn":21},{"ruleId":"236","severity":1,"message":"267","line":23,"column":10,"nodeType":"238","messageId":"239","endLine":23,"endColumn":25},{"ruleId":"236","severity":1,"message":"265","line":21,"column":10,"nodeType":"238","messageId":"239","endLine":21,"endColumn":25},{"ruleId":"236","severity":1,"message":"260","line":3,"column":15,"nodeType":"238","messageId":"239","endLine":3,"endColumn":22},{"ruleId":"236","severity":1,"message":"261","line":3,"column":30,"nodeType":"238","messageId":"239","endLine":3,"endColumn":38},{"ruleId":"236","severity":1,"message":"262","line":3,"column":40,"nodeType":"238","messageId":"239","endLine":3,"endColumn":46},{"ruleId":"236","severity":1,"message":"268","line":6,"column":13,"nodeType":"238","messageId":"239","endLine":6,"endColumn":20},{"ruleId":"244","severity":1,"message":"245","line":38,"column":20,"nodeType":"246","messageId":"247","endLine":38,"endColumn":22},{"ruleId":"244","severity":1,"message":"245","line":43,"column":27,"nodeType":"246","messageId":"247","endLine":43,"endColumn":29},{"ruleId":"244","severity":1,"message":"245","line":48,"column":27,"nodeType":"246","messageId":"247","endLine":48,"endColumn":29},{"ruleId":"244","severity":1,"message":"245","line":51,"column":27,"nodeType":"246","messageId":"247","endLine":51,"endColumn":29},{"ruleId":"236","severity":1,"message":"269","line":1,"column":49,"nodeType":"238","messageId":"239","endLine":1,"endColumn":53},{"ruleId":"236","severity":1,"message":"270","line":1,"column":64,"nodeType":"238","messageId":"239","endLine":1,"endColumn":74},{"ruleId":"236","severity":1,"message":"271","line":6,"column":8,"nodeType":"238","messageId":"239","endLine":6,"endColumn":13},{"ruleId":"236","severity":1,"message":"272","line":7,"column":8,"nodeType":"238","messageId":"239","endLine":7,"endColumn":19},{"ruleId":"236","severity":1,"message":"273","line":8,"column":8,"nodeType":"238","messageId":"239","endLine":8,"endColumn":22},{"ruleId":"244","severity":1,"message":"274","line":37,"column":31,"nodeType":"246","messageId":"247","endLine":37,"endColumn":33},{"ruleId":"244","severity":1,"message":"245","line":86,"column":20,"nodeType":"246","messageId":"247","endLine":86,"endColumn":22},{"ruleId":"244","severity":1,"message":"245","line":105,"column":27,"nodeType":"246","messageId":"247","endLine":105,"endColumn":29},{"ruleId":"244","severity":1,"message":"245","line":124,"column":27,"nodeType":"246","messageId":"247","endLine":124,"endColumn":29},{"ruleId":"244","severity":1,"message":"245","line":149,"column":20,"nodeType":"246","messageId":"247","endLine":149,"endColumn":22},{"ruleId":"244","severity":1,"message":"245","line":154,"column":27,"nodeType":"246","messageId":"247","endLine":154,"endColumn":29},{"ruleId":"244","severity":1,"message":"245","line":159,"column":27,"nodeType":"246","messageId":"247","endLine":159,"endColumn":29},{"ruleId":"236","severity":1,"message":"275","line":20,"column":24,"nodeType":"238","messageId":"239","endLine":20,"endColumn":37},{"ruleId":"236","severity":1,"message":"276","line":23,"column":12,"nodeType":"238","messageId":"239","endLine":23,"endColumn":21},{"ruleId":"236","severity":1,"message":"277","line":24,"column":12,"nodeType":"238","messageId":"239","endLine":24,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":39,"column":21,"nodeType":"246","messageId":"247","endLine":39,"endColumn":23},{"ruleId":"244","severity":1,"message":"245","line":39,"column":43,"nodeType":"246","messageId":"247","endLine":39,"endColumn":45},{"ruleId":"244","severity":1,"message":"245","line":39,"column":67,"nodeType":"246","messageId":"247","endLine":39,"endColumn":69},{"ruleId":"236","severity":1,"message":"278","line":6,"column":5,"nodeType":"238","messageId":"239","endLine":6,"endColumn":10},{"ruleId":"236","severity":1,"message":"279","line":6,"column":12,"nodeType":"238","messageId":"239","endLine":6,"endColumn":24},{"ruleId":"236","severity":1,"message":"280","line":6,"column":26,"nodeType":"238","messageId":"239","endLine":6,"endColumn":38},{"ruleId":"236","severity":1,"message":"281","line":6,"column":40,"nodeType":"238","messageId":"239","endLine":6,"endColumn":45},{"ruleId":"236","severity":1,"message":"282","line":7,"column":7,"nodeType":"238","messageId":"239","endLine":7,"endColumn":23},{"ruleId":"236","severity":1,"message":"269","line":7,"column":25,"nodeType":"238","messageId":"239","endLine":7,"endColumn":29},{"ruleId":"236","severity":1,"message":"283","line":7,"column":31,"nodeType":"238","messageId":"239","endLine":7,"endColumn":44},{"ruleId":"236","severity":1,"message":"284","line":7,"column":46,"nodeType":"238","messageId":"239","endLine":7,"endColumn":57},{"ruleId":"236","severity":1,"message":"285","line":8,"column":6,"nodeType":"238","messageId":"239","endLine":8,"endColumn":14},{"ruleId":"236","severity":1,"message":"286","line":8,"column":16,"nodeType":"238","messageId":"239","endLine":8,"endColumn":22},{"ruleId":"236","severity":1,"message":"287","line":8,"column":24,"nodeType":"238","messageId":"239","endLine":8,"endColumn":29},{"ruleId":"236","severity":1,"message":"256","line":20,"column":8,"nodeType":"238","messageId":"239","endLine":20,"endColumn":13},{"ruleId":"236","severity":1,"message":"288","line":21,"column":74,"nodeType":"238","messageId":"239","endLine":21,"endColumn":92},{"ruleId":"236","severity":1,"message":"289","line":21,"column":94,"nodeType":"238","messageId":"239","endLine":21,"endColumn":113},{"ruleId":"236","severity":1,"message":"290","line":26,"column":11,"nodeType":"238","messageId":"239","endLine":26,"endColumn":17},{"ruleId":"236","severity":1,"message":"291","line":28,"column":12,"nodeType":"238","messageId":"239","endLine":28,"endColumn":16},{"ruleId":"236","severity":1,"message":"292","line":28,"column":18,"nodeType":"238","messageId":"239","endLine":28,"endColumn":25},{"ruleId":"236","severity":1,"message":"293","line":29,"column":12,"nodeType":"238","messageId":"239","endLine":29,"endColumn":17},{"ruleId":"236","severity":1,"message":"294","line":29,"column":19,"nodeType":"238","messageId":"239","endLine":29,"endColumn":27},{"ruleId":"236","severity":1,"message":"295","line":32,"column":23,"nodeType":"238","messageId":"239","endLine":32,"endColumn":35},{"ruleId":"236","severity":1,"message":"277","line":34,"column":12,"nodeType":"238","messageId":"239","endLine":34,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":52,"column":7,"nodeType":"298","endLine":52,"endColumn":9,"suggestions":"299"},{"ruleId":"244","severity":1,"message":"245","line":55,"column":15,"nodeType":"246","messageId":"247","endLine":55,"endColumn":17},{"ruleId":"236","severity":1,"message":"240","line":1,"column":17,"nodeType":"238","messageId":"239","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"300","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":17},{"ruleId":"236","severity":1,"message":"301","line":5,"column":5,"nodeType":"238","messageId":"239","endLine":5,"endColumn":11},{"ruleId":"236","severity":1,"message":"278","line":5,"column":13,"nodeType":"238","messageId":"239","endLine":5,"endColumn":18},{"ruleId":"236","severity":1,"message":"279","line":5,"column":20,"nodeType":"238","messageId":"239","endLine":5,"endColumn":32},{"ruleId":"236","severity":1,"message":"280","line":5,"column":34,"nodeType":"238","messageId":"239","endLine":5,"endColumn":46},{"ruleId":"236","severity":1,"message":"282","line":6,"column":7,"nodeType":"238","messageId":"239","endLine":6,"endColumn":23},{"ruleId":"236","severity":1,"message":"283","line":6,"column":31,"nodeType":"238","messageId":"239","endLine":6,"endColumn":44},{"ruleId":"236","severity":1,"message":"284","line":6,"column":46,"nodeType":"238","messageId":"239","endLine":6,"endColumn":57},{"ruleId":"236","severity":1,"message":"285","line":7,"column":6,"nodeType":"238","messageId":"239","endLine":7,"endColumn":14},{"ruleId":"236","severity":1,"message":"293","line":10,"column":12,"nodeType":"238","messageId":"239","endLine":10,"endColumn":17},{"ruleId":"236","severity":1,"message":"302","line":10,"column":19,"nodeType":"238","messageId":"239","endLine":10,"endColumn":27},{"ruleId":"303","severity":1,"message":"304","line":11,"column":1,"nodeType":"305","endLine":12,"endColumn":55},{"ruleId":"236","severity":1,"message":"255","line":5,"column":52,"nodeType":"238","messageId":"239","endLine":5,"endColumn":68},{"ruleId":"236","severity":1,"message":"306","line":98,"column":13,"nodeType":"238","messageId":"239","endLine":98,"endColumn":25},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'fname' is assigned a value but never used.","'lname' is assigned a value but never used.","'isChangePassword' is assigned a value but never used.","'setIsChangePassword' is assigned a value but never used.","'isDeleteAccount' is assigned a value but never used.","'setIsDeleteAccount' is assigned a value but never used.","'InputLeftElement' is defined but never used.","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Heading' is defined but never used.","'WrapItem' is defined but never used.","'Center' is defined but never used.","'token' is assigned a value but never used.","'result' is assigned a value but never used.","'currentpassword' is assigned a value but never used.","'newpassword' is assigned a value but never used.","'confnewpassword' is assigned a value but never used.","'actions' is defined but never used.","'Text' is defined but never used.","'ScrollView' is defined but never used.","'Skill' is defined but never used.","'Connections' is defined but never used.","'Reccomendation' is defined but never used.","Expected '!==' and instead saw '!='.","'setIsLoggedIn' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'Image' is defined but never used.","'ModalCloseButton' is defined but never used.","'useDisclosure' is defined but never used.","'ModalFooter' is defined but never used.","'Textarea' is defined but never used.","'Avatar' is defined but never used.","'Stack' is defined but never used.","'kSecondaryBlueDark' is defined but never used.","'kSecondaryBlueLight' is defined but never used.","'onOpen' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'image' is assigned a value but never used.","'setimage' is assigned a value but never used.","'setSkillname' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleValidation' and 'validations'. Either include them or remove the dependency array.","ArrayExpression",["309"],"'PropTypes' is defined but never used.","'Button' is defined but never used.","'setImage' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'authRedirect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"310","fix":"311"},"Update the dependencies array to be: [handleValidation, validations]",{"range":"312","text":"313"},[1836,1838],"[handleValidation, validations]"]