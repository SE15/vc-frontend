[{"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\index.js":"1","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\App.js":"2","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\reportWebVitals.js":"3","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ThemeToggler.jsx":"4","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Main.jsx":"5","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\TempScreen.jsx":"6","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\ProfileSettings.jsx":"7","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ProfileInfo.jsx":"8","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ErrorMessage.jsx":"9","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\Footer.jsx":"10","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\utils\\constants.js":"11","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Profile.jsx":"12","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Login.jsx":"13","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\SignUp.jsx":"14","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\Header.jsx":"15"},{"size":517,"mtime":1611340083259,"results":"16","hashOfConfig":"17"},{"size":385,"mtime":1611407139631,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1610380932308,"results":"19","hashOfConfig":"17"},{"size":470,"mtime":1611341932671,"results":"20","hashOfConfig":"17"},{"size":1100,"mtime":1611379882383,"results":"21","hashOfConfig":"17"},{"size":845,"mtime":1611379903809,"results":"22","hashOfConfig":"17"},{"size":6386,"mtime":1611354124496,"results":"23","hashOfConfig":"17"},{"size":1657,"mtime":1611408114952,"results":"24","hashOfConfig":"17"},{"size":351,"mtime":1611341670955,"results":"25","hashOfConfig":"17"},{"size":754,"mtime":1611384733806,"results":"26","hashOfConfig":"17"},{"size":343,"mtime":1611407206520,"results":"27","hashOfConfig":"17"},{"size":1042,"mtime":1611379850132,"results":"28","hashOfConfig":"17"},{"size":1951,"mtime":1611354463342,"results":"29","hashOfConfig":"17"},{"size":2862,"mtime":1611354501840,"results":"30","hashOfConfig":"17"},{"size":2473,"mtime":1611408502031,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1tgqvh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\index.js",[],["67","68"],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\App.js",["69"],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\reportWebVitals.js",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ThemeToggler.jsx",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Main.jsx",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\TempScreen.jsx",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\ProfileSettings.jsx",["70","71","72","73","74","75"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  Image,\r\n  Stack\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport logo from '../assets/logo.png';\r\nimport { kPrimaryGray } from '../utils/constants';\r\n\r\nexport default function Profile() {\r\n  const [fname, setFName] = useState('');\r\n  const [lname, setLName] = useState('');\r\n \r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n  const [isDeleteAccount, setIsDeleteAccount] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //save fname and lname\r\n      setIsLoggedIn(true);\r\n      setIsLoading(false);\r\n      \r\n    } catch (error) {\r\n      setError('Invalid');\r\n      setIsLoading(false);\r\n      \r\n    }\r\n  };\r\n\r\n  //image uploading\r\n  const uploadedImage = React.useRef(null);\r\n  const imageUploader = React.useRef(null);\r\n\r\n  const handleImageUpload = e => {\r\n    const [file] = e.target.files;\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      const { current } = uploadedImage;\r\n      current.file = file;\r\n      reader.onload = e => {\r\n        current.src = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" >\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n        bg = {kPrimaryGray}\r\n      >\r\n        {isLoggedIn ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Changed Profile!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsLoggedIn(false)}\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box >\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\" >\r\n              <Heading>Profile</Heading>\r\n            </Box>\r\n            <Box height=\"20px\"></Box>\r\n            <Box >\r\n              <center>\r\n              <Image                  \r\n                  borderRadius=\"full\"\r\n                  width=\"50%\"\r\n                  height=\"50%\"\r\n                  objectFit=\"cover\"\r\n                  src = {logo}\r\n                  alt=\"Profile Picture\"\r\n                  ref={uploadedImage}\r\n                />\r\n                </center>\r\n            </Box>\r\n            <Stack align=\"center\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                ref={imageUploader}\r\n                style={{\r\n                  display: \"none\"\r\n                }}\r\n              />\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                variant=\"solid\"\r\n                type=\"submit\"\r\n                alignItems=\"center\"\r\n                mt={4}\r\n                onClick={() => imageUploader.current.click()}\r\n              >\r\n                {isLoading ? (\r\n                  <CircularProgress\r\n                    isIndeterminate\r\n                    size=\"sm\"\r\n                    color=\"teal\"\r\n                                      \r\n                  />\r\n                ) : (\r\n                  'Change Picture'\r\n                )}\r\n              </Button>\r\n            </Stack>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl>\r\n                    <Box borderColor = \"blue.500\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    size=\"lg\"\r\n                    onChange={event => setFName(event.currentTarget.value)}\r\n                  />\r\n                  </Box>\r\n                </FormControl>\r\n                <Box height=\"20px\"></Box>\r\n                <FormControl>\r\n                <Box borderColor = \"blue.500\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    colorScheme = \"black\"\r\n                    size=\"lg\"\r\n                    onChange={event => setLName(event.currentTarget.value)}\r\n                  />\r\n                  </Box>\r\n                </FormControl>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Save'\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Change Password'\r\n                  )}\r\n                </Button>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  colorScheme=\"red\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Delete Account'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ProfileInfo.jsx",["76","77","78","79"],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ErrorMessage.jsx",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\Footer.jsx",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\utils\\constants.js",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Profile.jsx",["80"],"import React, { Component } from \"react\";\r\nimport ProfileInfo from \"../components/ProfileInfo\";\r\nimport { Box, Heading, Wrap, WrapItem, Center } from \"@chakra-ui/react\"\r\n\r\n\r\nclass Profile extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileInfo name=\"Danushka Gunathilake\" button={this.props.button} />\r\n                <Box h={3}/>\r\n                <Wrap justify=\"space-around\">\r\n                    <TempBox name = \"Skills\"/>\r\n                    <TempBox name = \"Connections\"/>\r\n                    <TempBox name = \"Recommendations\"/>\r\n                </Wrap>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TempBox = (props) => {\r\n    return (\r\n        <WrapItem>\r\n        <Box bg=\"gray.200\" w=\"400px\" h=\"400px\" color=\"white\">\r\n            <Center m = {4}>\r\n                <Heading size=\"md\" color=\"gray.600\">{props.name}</Heading>\r\n            </Center>\r\n        </Box>\r\n      </WrapItem>\r\n    );\r\n}\r\nexport default Profile;","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Login.jsx",["81"],"import React from 'react';\r\nimport{Input, Stack,Button,InputGroup, Box\r\n    ,Divider, FormControl,Flex,Heading ,Text} from '@chakra-ui/react';\r\n    \r\n    const LoginScreen=()=>{\r\n        return([\r\n            <Box h={window.innerHeight*0.1} />,\r\n            <Flex width=\"Full\" align=\"center\" justifyContent=\"center\">\r\n            <Box p={8} maxWidth=\"95%\" borderWidth={3} borderRadius={8} boxShadow=\"lg\" bg=\"white.200\" borderColor=\"blueGreen.100\">\r\n            <Box textAlign=\"center\" color=\"blueGreen.100\" textStyle=\"h1\">\r\n                <Heading> Login </Heading>\r\n            </Box>\r\n            <Box my={4} textAlign=\"left\">\r\n            <form action='submit'>\r\n                <Stack spacing={3}>\r\n                    <FormControl isRequired>\r\n                        <InputGroup>\r\n                            \r\n                            <Input type='email' placeholder='Enter email' bg=\"white.100\" color=\"black.600\" borderColor=\"blueGreen.100\"/>\r\n                        </InputGroup>\r\n                    </FormControl>\r\n                    <FormControl isRequired>\r\n                        <InputGroup>\r\n                            \r\n                            <Input type='password' aria-label='password' placeholder='Enter Password' bg=\"white.100\" color=\"black.600\" borderColor=\"blueGreen.100\"/>\r\n                        </InputGroup>\r\n                    </FormControl>\r\n                 \r\n                    <Divider/>\r\n                    \r\n                    <Button type='submit' variant='solid' boxShadow='sm'_hover={{boxShadow:'md'}} bg=\"black.500\" >\r\n                        Log In!</Button> \r\n    \r\n                </Stack>\r\n            <Text textStyle=\"h2\" color=\"blue.100\">\r\n                <br/>\r\n                <a href=\"#\">Create New Account</a>\r\n            </Text>\r\n            </form>\r\n            \r\n            </Box>\r\n            </Box>\r\n            </Flex>\r\n        ]);\r\n    }\r\n    \r\n    export default LoginScreen;","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\SignUp.jsx",["82"],"import React from 'react';\r\nimport{Input, Stack,Button,InputGroup, InputLeftElement, Box,\r\n    HStack,Divider, FormControl,Flex,Heading,Text} from '@chakra-ui/react';\r\n\r\n\r\nconst SignInScreen=()=>{\r\n   return([\r\n       <Box h={window.innerHeight*0.07} />,\r\n       <Flex width=\"Full\" align=\"center\" justifyContent=\"center\">\r\n       <Box p={8} maxWidth=\"85%\" borderWidth={3} borderRadius={8} boxShadow=\"lg\" bg=\"white.200\" borderColor=\"blueGreen.100\">\r\n       <Box textAlign=\"center\" color=\"blueGreen.100\" textStyle=\"h1\">\r\n           <Heading> SignUp </Heading>\r\n       </Box>\r\n\r\n           <Box my={4} textAlign=\"left\">\r\n       <form action='submit'>\r\n           <Stack spacing={3}>\r\n               <FormControl isRequired>\r\n                   <InputGroup>\r\n                       <InputLeftElement/>\r\n                       <Input type='email' placeholder='Email' bg=\"white.100\" color=\"black.600\" borderColor=\"blueGreen.100\"/>\r\n                   </InputGroup>\r\n               </FormControl>\r\n               <HStack>\r\n               <FormControl isRequired>\r\n                   <InputGroup>\r\n                       <InputLeftElement/>\r\n                       <Input type='text' placeholder='First Name' bg=\"white.100\" color=\"black.600\" width=\"100%\" borderColor=\"blueGreen.100\"/>\r\n                   </InputGroup>\r\n               </FormControl>\r\n               <FormControl isRequired>\r\n                   <InputGroup>\r\n                       <InputLeftElement/> \r\n                       <Input type='text' placeholder='Last Name' bg=\"white.100\" color=\"black.600\" borderColor=\"blueGreen.100\"/>\r\n                   </InputGroup>\r\n               </FormControl>\r\n               </HStack>\r\n               <FormControl isRequired>\r\n                   <InputGroup>\r\n                       <InputLeftElement/>\r\n                       <Input type='password' aria-label='password' placeholder='Password' bg=\"white.100\" color=\"black.600\" borderColor=\"blueGreen.100\"/>\r\n                   </InputGroup>\r\n               </FormControl>\r\n               <FormControl isRequired>\r\n                   <InputGroup>\r\n                       <InputLeftElement/>\r\n                       <Input type='password' aria-label='Confirm password' placeholder='Confirm Password' bg=\"white.100\" color=\"black.600\" borderColor=\"blueGreen.100\"/>\r\n                   </InputGroup>\r\n               </FormControl>\r\n            \r\n               <Divider/>\r\n               \r\n               <Button type='submit' variant='solid' boxShadow='sm'_hover={{boxShadow:'md'}} bg=\"black.500\" >\r\n                   Sign Up!</Button> \r\n\r\n           </Stack>\r\n           <Text textStyle=\"h2\" color=\"blue.100\" >\r\n           <br/>\r\n           <a href=\"#\">Already Registered? Sign In</a>\r\n           </Text>\r\n\r\n       </form>\r\n       </Box>\r\n       </Box>\r\n       </Flex>\r\n   ]\r\n   );\r\n}\r\n\r\nexport default SignInScreen;","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\Header.jsx",["83","84","85","86","87","88","89","90","91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":26,"nodeType":"99","messageId":"100","endLine":2,"endColumn":29},{"ruleId":"97","severity":1,"message":"101","line":21,"column":10,"nodeType":"99","messageId":"100","endLine":21,"endColumn":15},{"ruleId":"97","severity":1,"message":"102","line":22,"column":10,"nodeType":"99","messageId":"100","endLine":22,"endColumn":15},{"ruleId":"97","severity":1,"message":"103","line":28,"column":10,"nodeType":"99","messageId":"100","endLine":28,"endColumn":26},{"ruleId":"97","severity":1,"message":"104","line":28,"column":28,"nodeType":"99","messageId":"100","endLine":28,"endColumn":47},{"ruleId":"97","severity":1,"message":"105","line":29,"column":10,"nodeType":"99","messageId":"100","endLine":29,"endColumn":25},{"ruleId":"97","severity":1,"message":"106","line":29,"column":27,"nodeType":"99","messageId":"100","endLine":29,"endColumn":45},{"ruleId":"107","severity":1,"message":"108","line":38,"column":20,"nodeType":"109","messageId":"110","endLine":38,"endColumn":22},{"ruleId":"107","severity":1,"message":"108","line":43,"column":27,"nodeType":"109","messageId":"110","endLine":43,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":48,"column":27,"nodeType":"109","messageId":"110","endLine":48,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":51,"column":27,"nodeType":"109","messageId":"110","endLine":51,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":7,"column":5,"nodeType":"113","messageId":"114","endLine":10,"endColumn":6},{"ruleId":"115","severity":1,"message":"116","line":37,"column":17,"nodeType":"117","endLine":37,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":59,"column":12,"nodeType":"117","endLine":59,"endColumn":24},{"ruleId":"97","severity":1,"message":"118","line":2,"column":47,"nodeType":"99","messageId":"100","endLine":2,"endColumn":56},{"ruleId":"97","severity":1,"message":"119","line":10,"column":23,"nodeType":"99","messageId":"100","endLine":10,"endColumn":36},{"ruleId":"97","severity":1,"message":"120","line":11,"column":11,"nodeType":"99","messageId":"100","endLine":11,"endColumn":17},{"ruleId":"97","severity":1,"message":"121","line":11,"column":19,"nodeType":"99","messageId":"100","endLine":11,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":13,"column":118,"nodeType":"124","endLine":13,"endColumn":124},{"ruleId":"97","severity":1,"message":"125","line":48,"column":11,"nodeType":"99","messageId":"100","endLine":48,"endColumn":21},{"ruleId":"97","severity":1,"message":"120","line":49,"column":11,"nodeType":"99","messageId":"100","endLine":49,"endColumn":17},{"ruleId":"97","severity":1,"message":"121","line":49,"column":19,"nodeType":"99","messageId":"100","endLine":49,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":50,"column":17,"nodeType":"109","messageId":"110","endLine":50,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":58,"column":17,"nodeType":"109","messageId":"110","endLine":58,"endColumn":19},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'fname' is assigned a value but never used.","'lname' is assigned a value but never used.","'isChangePassword' is assigned a value but never used.","'setIsChangePassword' is assigned a value but never used.","'isDeleteAccount' is assigned a value but never used.","'setIsDeleteAccount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Container' is defined but never used.","'setIsLoggedIn' is assigned a value but never used.","'isUser' is assigned a value but never used.","'setUser' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isLoggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]