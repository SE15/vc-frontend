[{"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\index.js":"1","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\App.js":"2","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\reducers\\auth.js":"3","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\actionTypes.js":"4","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\auth.js":"5","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Footer.jsx":"6","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Header.jsx":"7","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Main.jsx":"8","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\ajax.js":"9","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\constants.js":"10","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\ProfileSettings.jsx":"11","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Logout.jsx":"12","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\SignUp.jsx":"13","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Profile.jsx":"14","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Login.jsx":"15","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\ChangePassword.jsx":"16","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\DeleteAccount.jsx":"17","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Home.jsx":"18","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ProfileInfo.jsx":"19","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ErrorMessage.jsx":"20","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\TempBox.jsx":"21","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\constants.js":"22","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Skills\\Skill\\Skill.js":"23","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Connections\\Connection\\Connection.js":"24","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Reccomendation\\Reccomendation.js":"25","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Reccomendation\\ReccomendationPost.js":"26"},{"size":829,"mtime":1613722046491,"results":"27","hashOfConfig":"28"},{"size":845,"mtime":1613967132579,"results":"29","hashOfConfig":"28"},{"size":1566,"mtime":1614172036651,"results":"30","hashOfConfig":"28"},{"size":233,"mtime":1613722046630,"results":"31","hashOfConfig":"28"},{"size":1782,"mtime":1614173947668,"results":"32","hashOfConfig":"28"},{"size":754,"mtime":1613722046292,"results":"33","hashOfConfig":"28"},{"size":2375,"mtime":1613722046324,"results":"34","hashOfConfig":"28"},{"size":1336,"mtime":1614174374611,"results":"35","hashOfConfig":"28"},{"size":138,"mtime":1613722046631,"results":"36","hashOfConfig":"28"},{"size":343,"mtime":1613722046632,"results":"37","hashOfConfig":"28"},{"size":6394,"mtime":1613722046559,"results":"38","hashOfConfig":"28"},{"size":536,"mtime":1613722046544,"results":"39","hashOfConfig":"28"},{"size":6370,"mtime":1613967739679,"results":"40","hashOfConfig":"28"},{"size":2859,"mtime":1614001600705,"results":"41","hashOfConfig":"28"},{"size":4938,"mtime":1614174358533,"results":"42","hashOfConfig":"28"},{"size":5941,"mtime":1613722046579,"results":"43","hashOfConfig":"28"},{"size":3729,"mtime":1613722046611,"results":"44","hashOfConfig":"28"},{"size":1786,"mtime":1614174132775,"results":"45","hashOfConfig":"28"},{"size":1899,"mtime":1614001538600,"results":"46","hashOfConfig":"28"},{"size":351,"mtime":1613722046281,"results":"47","hashOfConfig":"28"},{"size":7359,"mtime":1614175603412,"results":"48","hashOfConfig":"28"},{"size":463,"mtime":1613722046490,"results":"49","hashOfConfig":"28"},{"size":9876,"mtime":1614175672873,"results":"50","hashOfConfig":"28"},{"size":1346,"mtime":1614174595041,"results":"51","hashOfConfig":"28"},{"size":1128,"mtime":1614176674622,"results":"52","hashOfConfig":"28"},{"size":3723,"mtime":1614175601258,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1p7gug7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\index.js",[],["114","115"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\App.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\reducers\\auth.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\actionTypes.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\store\\actions\\auth.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Footer.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Header.jsx",["116","117","118","119","120"],"import { Input, Heading, InputGroup, InputLeftElement, Box,\r\n    HStack, IconButton, Spacer,Button, Image, Container} from \"@chakra-ui/react\"\r\nimport { Search2Icon,BellIcon,SettingsIcon } from '@chakra-ui/icons'\r\nimport {React,useState} from 'react'\r\nimport { kPrimaryBlack, kSecondaryBlue } from '../utils/constants'\r\nimport logo from '../assets/logo.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n\r\n   return ([\r\n           <Box bg={kPrimaryBlack} w=\"100%\" p={5}  position=\"fixed\" color=\"white\" h = {16} p= {2}>\r\n               <HStack>\r\n                    <Image \r\n                        src = {logo}\r\n                        htmlWidth = \"60px\"\r\n                        />\r\n                    <Heading  size=\"md\" color=\"black.500\">\r\n                        Volunteer Circle\r\n                    </Heading>\r\n                    <Spacer />\r\n                   <InputGroup w=\"50%\">\r\n                       <InputLeftElement\r\n                       pointerEvents=\"none\"\r\n                       children={<Search2Icon color=\"white.100\" />}\r\n                       \r\n                       />\r\n                       <Input type=\"search\" placeholder=\"Search\" color=\"black.400\"/>\r\n                       <IconButton aria-label=\"Search database\" icon={<Search2Icon />} bg=\"blueGreen.400\"/>\r\n                   </InputGroup>\r\n                   <Spacer/>\r\n                   <HStack>\r\n                   <SignButton type={props.type}/>                  \r\n                   </HStack>\r\n                   \r\n               </HStack>\r\n           </Box>,\r\n           <Box h = {16} bg = {kSecondaryBlue}/>\r\n   ]\r\n   )\r\n}\r\n\r\nfunction SignButton(props){\r\n   if(props.type==false){\r\n       //Guest\r\n       return(\r\n           <HStack>\r\n           <Button size=\"md\" bg=\"blueGreen.100\" >Sign In</Button> \r\n       </HStack>); \r\n   }\r\n   if(props.type==true){\r\n       return(\r\n           <HStack>\r\n               <IconButton icon={<BellIcon />} bg=\"blueGreen.200\"/>\r\n                <IconButton icon={<SettingsIcon />} bg=\"blueGreen.200\" />\r\n                <NavLink\r\n                    to=\"/logout\"\r\n                    activeStyle={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\"\r\n                    }}\r\n                    >Sign Out</NavLink>\r\n           </HStack>\r\n           );\r\n   }\r\n   \r\n}\r\n\r\n\r\nexport default Header;","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Main.jsx",["121"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\ajax.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\utils\\constants.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\ProfileSettings.jsx",["122","123","124","125","126","127"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  Image,\r\n  Stack\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport anonymous from '../assets/anonymous.png';\r\nimport { kPrimaryGray } from '../utils/constants';\r\n\r\nexport default function Profile() {\r\n  const [fname, setFName] = useState('');\r\n  const [lname, setLName] = useState('');\r\n \r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n  const [isDeleteAccount, setIsDeleteAccount] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //save fname and lname\r\n      setIsLoggedIn(true);\r\n      setIsLoading(false);\r\n      \r\n    } catch (error) {\r\n      setError('Invalid');\r\n      setIsLoading(false);\r\n      \r\n    }\r\n  };\r\n\r\n  //image uploading\r\n  const uploadedImage = React.useRef(null);\r\n  const imageUploader = React.useRef(null);\r\n\r\n  const handleImageUpload = e => {\r\n    const [file] = e.target.files;\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      const { current } = uploadedImage;\r\n      current.file = file;\r\n      reader.onload = e => {\r\n        current.src = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" >\r\n      <Box\r\n        p={8}\r\n        w = \"30%\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n        bg = {kPrimaryGray}\r\n      >\r\n        {isLoggedIn ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Changed Profile!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsLoggedIn(false)}\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box >\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\" >\r\n              <Heading>Profile</Heading>\r\n            </Box>\r\n            <Box height=\"20px\"></Box>\r\n            <Box >\r\n              <center>\r\n              <Image                  \r\n                  borderRadius=\"full\"\r\n                  width=\"50%\"\r\n                  height=\"50%\"\r\n                  objectFit=\"cover\"\r\n                  src = {anonymous}\r\n                  alt=\"Profile Picture\"\r\n                  ref={uploadedImage}\r\n                />\r\n                </center>\r\n            </Box>\r\n            <Stack align=\"center\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                ref={imageUploader}\r\n                style={{\r\n                  display: \"none\"\r\n                }}\r\n              />\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                variant=\"solid\"\r\n                type=\"submit\"\r\n                alignItems=\"center\"\r\n                mt={4}\r\n                onClick={() => imageUploader.current.click()}\r\n              >\r\n                {isLoading ? (\r\n                  <CircularProgress\r\n                    isIndeterminate\r\n                    size=\"sm\"\r\n                    color=\"teal\"\r\n                                      \r\n                  />\r\n                ) : (\r\n                  'Change Picture'\r\n                )}\r\n              </Button>\r\n            </Stack>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl>\r\n                    <Box borderColor = \"blue.500\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    size=\"lg\"\r\n                    onChange={event => setFName(event.currentTarget.value)}\r\n                  />\r\n                  </Box>\r\n                </FormControl>\r\n                <Box height=\"20px\"></Box>\r\n                <FormControl>\r\n                <Box borderColor = \"blue.500\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    colorScheme = \"black\"\r\n                    size=\"lg\"\r\n                    onChange={event => setLName(event.currentTarget.value)}\r\n                  />\r\n                  </Box>\r\n                </FormControl>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Save'\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"blue\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Change Password'\r\n                  )}\r\n                </Button>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  colorScheme=\"red\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Delete Account'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Logout.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\SignUp.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Profile.jsx",["128","129"],"import React, { Component } from \"react\";\r\nimport ProfileInfo from \"../components/ProfileInfo\";\r\nimport { Box, Center, Wrap, Spinner } from \"@chakra-ui/react\"\r\nimport TempBox from \"../components/TempBox\"\r\nimport axios from \"axios\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            profile:{},\r\n            skill: {},\r\n            recommendation:{},\r\n            connections:{},\r\n            loading: true,\r\n            visit: true\r\n        };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const token = localStorage.getItem('token');\r\n        console.log(\" sd\" + token);\r\n        let data = {\r\n            headers: {\r\n            'Access-Control-Allow-Headers': 'x-Auth-token',\r\n            'x-Auth-token': token\r\n            }\r\n          }\r\n          \r\n        \r\n        const result = await axios.get(\"http://localhost:5000/api/users/2\",Object.assign({}, {}, data))\r\n        .then((result) => {\r\n            if(result.data.err==0){\r\n                this.setState({\r\n                    profile: result.data.obj[0][0],\r\n                    skill: result.data.obj[1],\r\n                    recommendation: result.data.obj[2],\r\n                    connections: result.data.obj[3],\r\n                    loading: false\r\n                });\r\n                console.log(this.state.skill);\r\n            }else{\r\n                console.log(result.data.msg);\r\n            }\r\n            \r\n        },\r\n        (error) =>{\r\n            console.log(\"Error\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (\r\n                <div>\r\n                    <Center>\r\n                        <Spinner\r\n                            thickness=\"5px\"\r\n                            speed=\"0.65s\"\r\n                            emptyColor=\"black\"\r\n                            color=\"white\"\r\n                            size=\"xl\"\r\n                        />\r\n                    </Center>\r\n                </div>\r\n            );\r\n        }else{\r\n            return (\r\n                <div>\r\n                    <ProfileInfo name={this.state.profile.first_name+\" \"+this.state.profile.last_name} button=\"1\" visit={this.state.visit} />\r\n                    <Box h={3}/>\r\n                    <Wrap justify=\"space-around\">\r\n                        {/* visit method will show whether a user or guest */}\r\n                        <TempBox name = \"Skills\" data={this.state.skill} visit={this.state.visit}/>\r\n                        <TempBox name = \"Connections\" data={this.state.connections} visit={this.state.visit}/>\r\n                        <TempBox name = \"Recommendations\" data={this.state.recommendation} visit={this.state.visit}/>\r\n                    </Wrap>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default Profile;","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Login.jsx",["130"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\ChangePassword.jsx",["131","132","133"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Icon\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nexport default function ChangePassword() {\r\n  const [currentpassword, setCurrentPassword] = useState('');\r\n  const [newpassword, setNewPassword] = useState('');\r\n  const [confnewpassword, setConfNewPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //if(newpassword===confnewpassword) && await(){\r\n      \r\n      //await() -confirm the current password from back end\r\n\r\n      setIsVerified(true);\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n      \r\n      \r\n\r\n      \r\n    } catch (error) {\r\n      setError('Invalid password');\r\n      setIsLoading(false);\r\n      setCurrentPassword('');\r\n      setNewPassword('');\r\n      setConfNewPassword('');\r\n      setShowPassword(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        {isVerified ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Password Changed!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsVerified(false)} //go back to the home profile\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\">\r\n              <Heading>Change Password</Heading>\r\n            </Box>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Current Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setCurrentPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>New Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setNewPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Confirm New Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setConfNewPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <Button\r\n                  variantColor=\"teal\"\r\n                  variant=\"outline\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Confirm'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\popups\\DeleteAccount.jsx",["134"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Icon\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nexport default function DeleteAccount() {\r\n  const [currentpassword, setCurrentPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //await() -confirm the current password from back end\r\n      \r\n      setIsVerified(true);\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n      \r\n      \r\n\r\n      \r\n    } catch (error) {\r\n      setError('Invalid password');\r\n      setIsLoading(false);\r\n      setCurrentPassword('');\r\n      setShowPassword(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        {isVerified ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Password Changed!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsVerified(false)} //go back to the home profile\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\">\r\n              <Heading>Delete Account</Heading>\r\n            </Box>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Current Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setCurrentPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                \r\n                \r\n                <Button\r\n                  colorScheme = \"red\"\r\n                  variant=\"solid\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Delete'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\pages\\Home.jsx",["135","136"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ProfileInfo.jsx",["137","138","139","140"],"import React from 'react';\r\n\r\nimport anonymous from '../assets/anonymous.png';\r\nimport { Image, Button, Box, Heading } from '@chakra-ui/react';\r\nimport { kSecondaryBlue} from '../utils/constants';\r\n\r\n\r\n/**\r\n * Information of the user.\r\n * \r\n * @param name - Name of the user\r\n * @param type - 0-guest/home, 1-add, 2-remove 3-pending\r\n */\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <center>\r\n            <Box w=\"100%\" border = \"5px\"  bg = {kSecondaryBlue}>\r\n                <Image\r\n                    src = {anonymous} //TODO: Need a method to update the profile pic\r\n                    htmlWidth=\"150px\"\r\n                />\r\n                <Heading fontSize=\"25px\" color=\"white\"> {props.name} </Heading>\r\n                <Box h={3}/>\r\n                <ConnectionButton type = {props.button} visit={props.visit}/>\r\n                <Box h={3}/>\r\n            </Box>\r\n        </center>\r\n    );\r\n}\r\n\r\n/**\r\n * Add Connection / Remove Connection button display\r\n * \r\n * @param {*} props \r\n */\r\n//TODO: Add onClick method\r\nconst ConnectionButton = (props) => {\r\n    if (props.visit) {\r\n        if (props.type == \"1\") {\r\n            return (\r\n            <Button colorScheme=\"blue\" variant=\"solid\" >\r\n            Add Connection\r\n             </Button>);\r\n        } else if (props.type == \"2\") {\r\n            return (\r\n            <Button colorScheme=\"red\" variant=\"solid\">\r\n            Remove Connection\r\n            </Button>);\r\n        } else if (props.type == \"3\") {\r\n            return (\r\n            <Heading color = \"green.100\" size = \"md\">Request Pending</Heading>);  \r\n        } else if (props.type == \"0\") {\r\n            return (<div></div>)\r\n        } else {\r\n            throw new Error(\"Invalid type for ConnectionButton\");\r\n        }\r\n    } else {\r\n        return(\r\n            <div>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default ProfileInfo;","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\ErrorMessage.jsx",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\TempBox.jsx",["141","142","143","144","145","146","147","148","149","150"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\constants.js",["151"],"export const  kPrimaryBlack = \"#263238\";\r\nexport const kPrimaryBlackDark = \"#000a12\";\r\nexport const kPrimaryBlackLight = \"#4f5b62\";\r\nexport const kPrimaryGray = \"#E2E8F0\";\r\n\r\n//SECONDARY\r\nexport const kSecondaryBlue = \"#01579b\";\r\nexport const kSecondaryBlueDark = \"#002f6c\";\r\nexport const kSecondaryBlueLight = \"#4f83cc\";\r\n\r\nexport default {kPrimaryBlack,kPrimaryBlackDark,kPrimaryBlackLight,kPrimaryGray,\r\nkSecondaryBlue,kSecondaryBlueDark,kSecondaryBlueLight}\r\n","D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Skills\\Skill\\Skill.js",["152","153","154","155"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Connections\\Connection\\Connection.js",["156","157"],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Reccomendation\\Reccomendation.js",[],"D:\\Semester 4\\Software Engineering\\Group project\\vc-frontend\\vc-frontend\\src\\components\\Reccomendation\\ReccomendationPost.js",["158","159","160","161","162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":2,"column":47,"nodeType":"170","messageId":"171","endLine":2,"endColumn":56},{"ruleId":"168","severity":1,"message":"172","line":4,"column":15,"nodeType":"170","messageId":"171","endLine":4,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":12,"column":92,"nodeType":"175","endLine":12,"endColumn":98},{"ruleId":"176","severity":1,"message":"177","line":44,"column":17,"nodeType":"178","messageId":"179","endLine":44,"endColumn":19},{"ruleId":"176","severity":1,"message":"177","line":51,"column":17,"nodeType":"178","messageId":"179","endLine":51,"endColumn":19},{"ruleId":"168","severity":1,"message":"180","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":23},{"ruleId":"168","severity":1,"message":"181","line":21,"column":10,"nodeType":"170","messageId":"171","endLine":21,"endColumn":15},{"ruleId":"168","severity":1,"message":"182","line":22,"column":10,"nodeType":"170","messageId":"171","endLine":22,"endColumn":15},{"ruleId":"168","severity":1,"message":"183","line":28,"column":10,"nodeType":"170","messageId":"171","endLine":28,"endColumn":26},{"ruleId":"168","severity":1,"message":"184","line":28,"column":28,"nodeType":"170","messageId":"171","endLine":28,"endColumn":47},{"ruleId":"168","severity":1,"message":"185","line":29,"column":10,"nodeType":"170","messageId":"171","endLine":29,"endColumn":25},{"ruleId":"168","severity":1,"message":"186","line":29,"column":27,"nodeType":"170","messageId":"171","endLine":29,"endColumn":45},{"ruleId":"168","severity":1,"message":"187","line":32,"column":15,"nodeType":"170","messageId":"171","endLine":32,"endColumn":21},{"ruleId":"176","severity":1,"message":"177","line":34,"column":31,"nodeType":"178","messageId":"179","endLine":34,"endColumn":33},{"ruleId":"168","severity":1,"message":"188","line":101,"column":13,"nodeType":"170","messageId":"171","endLine":101,"endColumn":25},{"ruleId":"168","severity":1,"message":"189","line":21,"column":10,"nodeType":"170","messageId":"171","endLine":21,"endColumn":25},{"ruleId":"168","severity":1,"message":"190","line":22,"column":10,"nodeType":"170","messageId":"171","endLine":22,"endColumn":21},{"ruleId":"168","severity":1,"message":"191","line":23,"column":10,"nodeType":"170","messageId":"171","endLine":23,"endColumn":25},{"ruleId":"168","severity":1,"message":"189","line":21,"column":10,"nodeType":"170","messageId":"171","endLine":21,"endColumn":25},{"ruleId":"168","severity":1,"message":"192","line":3,"column":15,"nodeType":"170","messageId":"171","endLine":3,"endColumn":22},{"ruleId":"168","severity":1,"message":"193","line":3,"column":30,"nodeType":"170","messageId":"171","endLine":3,"endColumn":38},{"ruleId":"176","severity":1,"message":"177","line":39,"column":24,"nodeType":"178","messageId":"179","endLine":39,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":44,"column":31,"nodeType":"178","messageId":"179","endLine":44,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":49,"column":31,"nodeType":"178","messageId":"179","endLine":49,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":52,"column":31,"nodeType":"178","messageId":"179","endLine":52,"endColumn":33},{"ruleId":"168","severity":1,"message":"194","line":1,"column":67,"nodeType":"170","messageId":"171","endLine":1,"endColumn":77},{"ruleId":"176","severity":1,"message":"177","line":40,"column":32,"nodeType":"178","messageId":"179","endLine":40,"endColumn":34},{"ruleId":"176","severity":1,"message":"177","line":40,"column":61,"nodeType":"178","messageId":"179","endLine":40,"endColumn":63},{"ruleId":"176","severity":1,"message":"195","line":67,"column":31,"nodeType":"178","messageId":"179","endLine":67,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":154,"column":20,"nodeType":"178","messageId":"179","endLine":154,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":168,"column":27,"nodeType":"178","messageId":"179","endLine":168,"endColumn":29},{"ruleId":"176","severity":1,"message":"177","line":179,"column":27,"nodeType":"178","messageId":"179","endLine":179,"endColumn":29},{"ruleId":"176","severity":1,"message":"177","line":196,"column":20,"nodeType":"178","messageId":"179","endLine":196,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":208,"column":27,"nodeType":"178","messageId":"179","endLine":208,"endColumn":29},{"ruleId":"176","severity":1,"message":"177","line":213,"column":27,"nodeType":"178","messageId":"179","endLine":213,"endColumn":29},{"ruleId":"196","severity":1,"message":"197","line":11,"column":1,"nodeType":"198","endLine":12,"endColumn":55},{"ruleId":"168","severity":1,"message":"199","line":22,"column":8,"nodeType":"170","messageId":"171","endLine":22,"endColumn":13},{"ruleId":"168","severity":1,"message":"200","line":23,"column":74,"nodeType":"170","messageId":"171","endLine":23,"endColumn":93},{"ruleId":"176","severity":1,"message":"195","line":84,"column":33,"nodeType":"178","messageId":"179","endLine":84,"endColumn":35},{"ruleId":"176","severity":1,"message":"177","line":95,"column":28,"nodeType":"178","messageId":"179","endLine":95,"endColumn":30},{"ruleId":"168","severity":1,"message":"201","line":10,"column":12,"nodeType":"170","messageId":"171","endLine":10,"endColumn":17},{"ruleId":"168","severity":1,"message":"202","line":10,"column":19,"nodeType":"170","messageId":"171","endLine":10,"endColumn":27},{"ruleId":"168","severity":1,"message":"203","line":21,"column":24,"nodeType":"170","messageId":"171","endLine":21,"endColumn":37},{"ruleId":"168","severity":1,"message":"204","line":24,"column":12,"nodeType":"170","messageId":"171","endLine":24,"endColumn":21},{"ruleId":"168","severity":1,"message":"205","line":25,"column":12,"nodeType":"170","messageId":"171","endLine":25,"endColumn":17},{"ruleId":"176","severity":1,"message":"177","line":40,"column":21,"nodeType":"178","messageId":"179","endLine":40,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":40,"column":43,"nodeType":"178","messageId":"179","endLine":40,"endColumn":45},{"ruleId":"176","severity":1,"message":"177","line":40,"column":67,"nodeType":"178","messageId":"179","endLine":40,"endColumn":69},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'fname' is assigned a value but never used.","'lname' is assigned a value but never used.","'isChangePassword' is assigned a value but never used.","'setIsChangePassword' is assigned a value but never used.","'isDeleteAccount' is assigned a value but never used.","'setIsDeleteAccount' is assigned a value but never used.","'result' is assigned a value but never used.","'authRedirect' is assigned a value but never used.","'currentpassword' is assigned a value but never used.","'newpassword' is assigned a value but never used.","'confnewpassword' is assigned a value but never used.","'Heading' is defined but never used.","'WrapItem' is defined but never used.","'ScrollView' is defined but never used.","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","'kSecondaryBlueLight' is defined but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]