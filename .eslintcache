[{"D:\\Web Applications\\ReactTutorials\\React\\confusion\\src\\index.js":"1","D:\\Web Applications\\ReactTutorials\\React\\confusion\\src\\reportWebVitals.js":"2","D:\\Web Applications\\ReactTutorials\\React\\confusion\\src\\App.js":"3","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\index.js":"4","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\App.js":"5","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\reportWebVitals.js":"6","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\TempScreen.jsx":"7","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\serviceWorker.js":"8","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ThemeToggler.js":"9","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ErrorMessage.js":"10","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\ProfileSettings.jsx":"11","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Main.jsx":"12","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Home.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":528,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":520,"mtime":1611329954065,"results":"18","hashOfConfig":"19"},{"size":886,"mtime":1611339548350,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1610380932308,"results":"21","hashOfConfig":"22"},{"size":738,"mtime":1611337836126,"results":"23","hashOfConfig":"19"},{"size":5227,"mtime":1611329954069,"results":"24","hashOfConfig":"19"},{"size":438,"mtime":1611329954062,"results":"25","hashOfConfig":"19"},{"size":352,"mtime":1611329954061,"results":"26","hashOfConfig":"19"},{"size":5326,"mtime":1611332152085,"results":"27","hashOfConfig":"19"},{"size":700,"mtime":1611337595205,"results":"28","hashOfConfig":"19"},{"size":742,"mtime":1611339405456,"results":"29","hashOfConfig":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ibu9tb",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ta3g7c",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1tgqvh",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Applications\\ReactTutorials\\React\\confusion\\src\\index.js",[],"D:\\Web Applications\\ReactTutorials\\React\\confusion\\src\\reportWebVitals.js",[],"D:\\Web Applications\\ReactTutorials\\React\\confusion\\src\\App.js",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\index.js",[],["59","60"],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\App.js",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\reportWebVitals.js",[],["61","62"],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\TempScreen.jsx",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\serviceWorker.js",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ThemeToggler.js",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\components\\ErrorMessage.js",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\ProfileSettings.jsx",["63","64","65","66","67","68"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  Image,\r\n  Stack\r\n} from '@chakra-ui/core';\r\n\r\n\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport logo from '../assets/logo.png';\r\n\r\nexport default function Profile() {\r\n  const [fname, setFName] = useState('');\r\n  const [lname, setLName] = useState('');\r\n \r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n  const [isDeleteAccount, setIsDeleteAccount] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //save fname and lname\r\n      setIsLoggedIn(true);\r\n      setIsLoading(false);\r\n      \r\n    } catch (error) {\r\n      setError('Invalid');\r\n      setIsLoading(false);\r\n      \r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        {isLoggedIn ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>Changed Profile!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsLoggedIn(false)}\r\n            >\r\n              Back Profile\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\">\r\n              <Heading>Profile</Heading>\r\n            </Box>\r\n            <Box height=\"20px\"></Box>\r\n            <Box >\r\n              <center>\r\n              <Image                  \r\n                  borderRadius=\"full\"\r\n                  width=\"50%\"\r\n                  height=\"50%\"\r\n                  objectFit=\"cover\"\r\n                  src = {logo}\r\n                  alt=\"Profile Picture\"\r\n                />\r\n                </center>\r\n            </Box>\r\n            <Stack align=\"center\">\r\n              <Button\r\n                variantColor=\"teal\"\r\n                variant=\"outline\"\r\n                type=\"submit\"\r\n                alignItems=\"center\"\r\n                mt={4}\r\n              >\r\n                {isLoading ? (\r\n                  <CircularProgress\r\n                    isIndeterminate\r\n                    size=\"sm\"\r\n                    color=\"teal\"\r\n                                      \r\n                  />\r\n                ) : (\r\n                  'Change Picture'\r\n                )}\r\n              </Button>\r\n            </Stack>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    size=\"lg\"\r\n                    onChange={event => setFName(event.currentTarget.value)}\r\n                  />\r\n                </FormControl>\r\n                <Box height=\"20px\"></Box>\r\n                <FormControl>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    size=\"lg\"\r\n                    onChange={event => setLName(event.currentTarget.value)}\r\n                  />\r\n                </FormControl>\r\n                \r\n                <Button\r\n                  variantColor=\"teal\"\r\n                  variant=\"outline\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Save'\r\n                  )}\r\n                </Button>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  variantColor=\"teal\"\r\n                  variant=\"outline\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Change Password'\r\n                  )}\r\n                </Button>\r\n                <Box height=\"40px\"></Box>\r\n                <Button\r\n                  variantColor=\"teal\"\r\n                  variant=\"outline\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Delete Account'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Main.jsx",[],"D:\\Web Applications\\Volunteer Circle\\vc-frontend\\src\\pages\\Home.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":20,"column":10,"nodeType":"77","messageId":"78","endLine":20,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":21,"column":10,"nodeType":"77","messageId":"78","endLine":21,"endColumn":15},{"ruleId":"75","severity":1,"message":"80","line":27,"column":10,"nodeType":"77","messageId":"78","endLine":27,"endColumn":26},{"ruleId":"75","severity":1,"message":"81","line":27,"column":28,"nodeType":"77","messageId":"78","endLine":27,"endColumn":47},{"ruleId":"75","severity":1,"message":"82","line":28,"column":10,"nodeType":"77","messageId":"78","endLine":28,"endColumn":25},{"ruleId":"75","severity":1,"message":"83","line":28,"column":27,"nodeType":"77","messageId":"78","endLine":28,"endColumn":45},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"no-unused-vars","'fname' is assigned a value but never used.","Identifier","unusedVar","'lname' is assigned a value but never used.","'isChangePassword' is assigned a value but never used.","'setIsChangePassword' is assigned a value but never used.","'isDeleteAccount' is assigned a value but never used.","'setIsDeleteAccount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]